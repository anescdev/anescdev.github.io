{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"DAWEB/Tema%202/practica2-1/","title":"Pr\u00e1ctica 2.1: Instalaci\u00f3n y configuraci\u00f3n de un servidor web Nginx","text":""},{"location":"DAWEB/Tema%202/practica2-1/#introduccion","title":"Introducci\u00f3n","text":"<p>En esta pr\u00e1ctica vamos a instalar y configurar Nginx, adem\u00e1s  del correspondiente software de FTP para poder subir las webs  al servidor, y tambi\u00e9n veremos como configurar HTTPS en Nginx.</p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-1/#instalacion-de-nginx","title":"Instalaci\u00f3n de NGINX","text":"<p>En primer lugar, para instalar el paquete Nginx en Debian se debe de actualizar los repositorios (para cualquier paquete ciertamente), y despu\u00e9s instalarlo, esto se logra mediantes los siguientes comandos: <pre><code>sudo apt-get update\nsudo apt-get install nginx\n</code></pre> Tendr\u00eda que salir algo parecido a lo de la siguiente captura, nos preguntar\u00e1 si queremos continuar (se puede obviar usando el par\u00e1metro -y en el segundo comando anterior), escribimos S y presionamos sobre Enter. </p> <p>Una vez hecho esto solo queda comprobar el estado del servicio web, para realizar esto en Debian 12, se usar\u00e1 el siguiente comando: <pre><code>sudo systemctl status nginx\n</code></pre> Este comando se deber\u00e1 ejecutar con sudo ya que as\u00ed nos mostrar\u00e1n los mensajes de logs de la aplicaci\u00f3n para comprobar que todo vaya correctamente, si todo sali\u00f3 bien, se deber\u00e1 de mostrar algo como en la captura: </p> <p>En caso de que algo haya ido mal lo mostrar\u00e1 en los logs el problema que hay para poder arreglarlo. Como prueba final si accedemos al servidor por medio de su IP en un navegador web y se nos muestra la web por defecto de Nginx, tal y como en la siguiente captura.</p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-1/#configuracion-de-un-host-en-nginx","title":"Configuraci\u00f3n de un host en Nginx","text":""},{"location":"DAWEB/Tema%202/practica2-1/#creacion-del-directorio-del-servidor","title":"Creaci\u00f3n del directorio del servidor","text":"<p>Para configurar un host separado de los dem\u00e1s lo recomendable es crear una carpeta donde poner los archivos por cada host, por lo que se creara una carpeta dentro del directorio <code>/var/www</code> que es la carpeta por defecto del servidor web, se dar\u00e1n los permisos necesarios y se cambiar\u00e1 el due\u00f1o de la carpeta para que no haya problemas de acceso.</p> <p></p> <p>El conjunto de comandos usado es: <pre><code>sudo mkdir /var/www/daweb &amp;&amp; sudo chown www-data:www-data /var/www/daweb &amp;&amp; sudo chmod 755 /var/www/daweb\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-1/#configuracion-del-host-en-nginx","title":"Configuraci\u00f3n del host en Nginx","text":"<p>Para configurar un host en Nginx primero debemos de localizar la carpeta donde se guardan la configuraci\u00f3n de los hosts existentes, esta es <code>/etc/nginx/sites-available</code>. Tambi\u00e9n existe otra ruta donde est\u00e1n los hosts activos en Nginx la cu\u00e1l es <code>/etc/nginx/sites-enabled</code>, permitiendo tener configurado diferentes hosts y estar activos los que necesitemos.</p> <p>Para configurar un host, debemos copiar el archivo por defecto y modificarlo, o copiar el siguiente bloque de c\u00f3digo en un archivo con el nombre que desees, recomendable que sea el nombre del host: <pre><code>server { \n        listen 80;\n        listen [::]:80;\n\n        server_name &lt;hostname&gt;;\n\n        root &lt;foldername&gt;;      \n        index index.html;\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n} \n</code></pre></p> <p>El <code>&lt;hostname&gt;</code> es el nombre de host por el que se acceder\u00e1 a la web y el <code>&lt;foldername</code> es la ruta al directorio que creamos en el subapartado anterior. Quedar\u00eda algo as\u00ed un archivo de configuraci\u00f3n b\u00e1sica:</p> <p></p> <p>Ahora para habilitar este sitio, debemos de poner este archivo dentro de <code>sites-enabled</code>, lo m\u00e1s com\u00fan es crear un enlace simb\u00f3lico desde el fichero en <code>sites-available</code> a <code>sites-enabled</code> tal y como se muestra en la siguiente captura:</p> <p></p> <p>Ahora solo queda reiniciar el servicio de Nginx usando el siguiente comando: <pre><code>sudo systemctl restart nginx\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-1/#anadir-al-archivo-host-la-nueva-url","title":"A\u00f1adir al archivo host la nueva URL","text":"<p>Para poder acceder a la web que acabamos de configurar se debe de acceder por medio de la url configurada en <code>hostname</code>, pero ocurre que por ahora no apunta a nuestro servidor o apunta a una web que no sabemos cu\u00e1l es. Bien, lo normal ser\u00eda usar un servidor DNS que resuelva el nombre y apunte al servidor pero como es un servidor de pruebas usaremos un fichero del sistema operativo que hace la funci\u00f3n de \"DNS\" local. Depende del sistema operativo, este estar\u00e1 en diferentes lugares: * Linux: <code>/etc/hosts</code> * Window: <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code> * MacOS: <code>/private/etc/hosts</code></p> <p>Para modificarlo deber\u00e1s de usar tu editor de texto favorito con permisos de administrador, entonces se nos mostrar\u00e1 un archivo con el siguiente formato (en Linux al menos): <pre><code>&lt;ip&gt; &lt;hostname&gt;\n&lt;ip&gt; &lt;hostname&gt;\n&lt;ip&gt; &lt;hostname&gt;\n...\n</code></pre> En mi caso he puesto un comentario para mas claridad(simplemente separar), y ahi he puesto que en MI sistema resuelva el nombre a esa IP. </p>"},{"location":"DAWEB/Tema%202/practica2-1/#probar-web","title":"Probar web","text":"<p>Para probar el host, voy a crear un archivo de prueba muy b\u00e1sico y lo guardar\u00e9 dentro de <code>/var/www/daweb</code> ya que es donde est\u00e1 la carpeta ra\u00edz del host configurado anteriormente</p> <p></p> <p>Solo quedar\u00eda acceder a la web en el navegador.</p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-1/#anadir-cifrado-https","title":"A\u00f1adir cifrado (HTTPS)","text":"<p>Como ya sabemos, es muy importante el cifrado de los datos en la  web ya que permite realizar operaciones con informaci\u00f3n sensible  de forma segura. Una web para que est\u00e9 cifrada debe de proporcionar  un certificado SSL(ahora TLS) expedido por una autoridad certificadora v\u00e1lida.</p> <p>En internet se suele oir la CA de Let's Encrypt ya que hacen certificados  TLS totalmente gratuitos con la \u00fanica pega de que duran 3 meses, pero esto  requiere que el servidor sea accesible desde internet por lo que usaremos  certificados autofirmados, los cuales el navegador indicar\u00e1 que no es segura  la web, pero si encriptar\u00e1 los datos con este certificado.</p>"},{"location":"DAWEB/Tema%202/practica2-1/#generar-certificado","title":"Generar certificado","text":"<p>Para generar el certificado, usaremos el software openssl, disponible en la mayor\u00eda de sistemas UNIX-Like en su gestor de paquetes.  Para Debian 12, usar\u00e1s: <pre><code>sudo apt-get install openssl\n</code></pre></p> <p>Una vez hecho esto, se deber\u00e1 de crear el certificado auto-firmado, para esto se ejecutar\u00e1 el siguiente comando:  <pre><code>openssl req -x509 -newkey rsa:4096 -keyout &lt;private_key_file&gt; -out &lt;certificate_file&gt; -sha256 -days 365 --nodes\n</code></pre> Este comando parece muy complicado pero vamos a explicarlo para que se entienda perfectamente:</p> <ul> <li>req: comando que indica a openssl que vas a iniciar una petici\u00f3n de firmado de certificado.</li> <li>x509: indica que usar\u00e1 la estructura de certificado X.509.</li> <li>newkey: indica que generar\u00e1 una clave usando el algoritmo indicado despues con <code>&lt;algoritmo&gt;:&lt;bits&gt;</code>.</li> <li>keyout: archivo donde se guardar\u00e1 la clave privada.</li> <li>out: archivo donde se guardar\u00e1 el certificado.</li> <li>sha256: indicamos que el certificado usar\u00e1 SHA-256 para calcular el hash.</li> <li>days: n\u00famero de d\u00edas de v\u00e1lidez del certificado.</li> <li>nodes: no encripta la clave privada, por lo que no nos pedir\u00e1 contrase\u00f1a para la clave. Lo usamos aqu\u00ed para que no de problemas con Nginx al momento de importarla en el host. Recomendable usar el par\u00e1metro <code>noenc</code> ya que <code>nodes</code> est\u00e1 en desuso pero aun funciona.</li> </ul> <p></p> <p>Despu\u00e9s nos pediran que rellenemos una serie de datos, se  rellenan conforme los pidan pero quiero hacer incapi\u00e9 en el  apartado de Common Name, aqu\u00ed es donde se escribir\u00e1n los  dominios y subdominios al que el certificado va dirigido.  Para hacer un certificado r\u00e1pido puedes dejar todos los campos  vac\u00edos menos el de Common Name y Email Address.</p> <p></p> <p>Ahora para tener el certificado en otra carpeta diferente, voy  a mover el certificado y la clave a otra carpeta, mas espec\u00edfico  a una que tiene Debian 12 y que almacena todos estos archivos:</p> <ul> <li>Certificados: /etc/ssl/certs</li> <li>Clave privada: /etc/ssl/private</li> </ul>"},{"location":"DAWEB/Tema%202/practica2-1/#configurar-el-host-de-nginx-para-https","title":"Configurar el host de Nginx para HTTPS","text":"<p>Para configurar el host, se deber\u00e1 de modificar el host  que ya se cre\u00f3 anteriormente, y lo que hay que hacer es que  cuando un usuario se conecte al servidor por HTTP, el protocolo sin cifrado, redirija autom\u00e1ticamente a HTTPS, esto es algo sencillo por suerte, se hace de la siguiente forma:</p> <p></p> <p>Estas directivas son muy sencillas de entender pero por si acaso,  las voy a explicar. La primera indica que escuchar\u00e1 en el puerto 80, el por defecto del protocolo HTTP, la segunda indica el nombre del host,  el que pusimos en el certificado, y el \u00faltimo indica que el host devolver\u00e1 a las peticiones el c\u00f3digo 301(redireccionamiento) y redirigir\u00e1 a la misma URL pero cambiando el protocolo por HTTPS.</p> <p></p> <p>Ahora para la configuraci\u00f3n del SSL, si nos fijamos es muy parecida a la configuraci\u00f3n por defecto menos por ciertos detalles, para empezar hemos hecho que no escuche por IPV6, tanto aqu\u00ed como en la configuraci\u00f3n de redireccionamiento, ya que no lo veo necesario, despu\u00e9s hay un peque\u00f1o a\u00f1adido en <code>listen</code>, que es la palabra <code>ssl</code> para poder habilitar el SSL. Para finalizar a\u00f1adimos dos directivas nuevas, que son:</p> <ul> <li>ssl_certificate: ruta al certificado generado</li> <li>ssl_certificate_key: ruta a la clave privada del certificado</li> </ul>"},{"location":"DAWEB/Tema%202/practica2-1/#accedemos-a-la-web","title":"Accedemos a la web","text":"<p>En la captura se demuestra que al acceder a la web, esta redirige al host HTTPS y se ve un candado con alerta, pero dice riesgo de seguridad. Esto se debe a que al usar un certificado firmado por uno mismo y no por una CA v\u00e1lida, para el navegador es un certificado inseguro aunque est\u00e9 vigente. Simplemente buscamos el bot\u00f3n de Aceptar el riesgo y continuar y podemos acceder a la web.</p> <p></p> <p>Como se ve, se muestra la web tal y como la ten\u00edamos pero con el protocolo HTTPS.</p>"},{"location":"DAWEB/Tema%202/practica2-1/#configuracion-de-servidor-sftp","title":"Configuraci\u00f3n de servidor SFTP","text":"<p>La pr\u00e1ctica indica que instalemos un servidor FTP, pero  tambi\u00e9n es posible hacerlo directamente con SSH pero al  igual que con FTP, hay que crear un usuario para subir los archivos.</p>"},{"location":"DAWEB/Tema%202/practica2-1/#creacion-del-usuario","title":"Creaci\u00f3n del usuario","text":"<p>Para crear un usuario, se deber\u00e1 de ejecutar el comando de la captura de pantalla, cuyos par\u00e1metros explicar\u00e9 ahora mismo:</p> <ul> <li>g: indicamos cual ser\u00e1 su grupo principal, en este caso ser\u00e1 el grupo www-data ya que es el grupo por defecto que usa nginx.</li> <li>m: indicamos que se crear\u00e1 la carpeta del usuario.</li> </ul> <p>Para terminar se pasa el nombre del usuario a crear y ejecutamos el comando, tras esto se deber\u00e1 de asignar una contrase\u00f1a al usuario con  el comando <code>passwd</code>, que es interactivo.</p> <p>Ahora para que el servicio ssh encuentre el nuevo usuario, se deber\u00e1 de reiniciar usando el siguiente comando: <pre><code>sudo systemctl restart sshd\n</code></pre> </p> <p>Para comprobar que podemos conectarnos, usaremos Filezilla para ello, rellenamos con los datos para conectarnos en la captura podemos ver que estamos en la carpeta del nuevo usuario creado.</p>"},{"location":"DAWEB/Tema%202/practica2-1/#cambio-de-la-raiz-del-servidor","title":"Cambio de la ra\u00edz del servidor","text":"<p>Para que podamos subir nuevos archivo al servidor web, no a la m\u00e1quina  debemos de poder acceder al directorio <code>/var/www/daweb</code>. Esto se puede hacer  de varias formas, entre ellas darle permisos al usuario creado en el directorio o  la que nosotros vamos a hacer, crear una carpeta dentro de la carpeta home del  nuevo usuario.</p> <p></p> <p>El nombre de la carpeta que debemos de crear puede ser cualquiera, pero por defecto se suele  usar <code>public_html</code> por lo que ese ser\u00e1 el nombre de este. Si nos fijamos el grupo que tiene acceso  a la carpeta es <code>www-data</code>, gracias a que el usuario daweb su grupo principal es el mismo.</p> <p></p> <p>El siguiente paso es abrir el archivo de configuraci\u00f3n del host, y buscar la directiva <code>root</code> para sustituir la antigua ruta por la ruta hacia la carpeta que hemos creado ahora mismo. Guardamos los cambios y reiniciamos el servidor con el siguiente comando <pre><code>sudo systemctl restart nginx\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-1/#prueba-de-subida","title":"Prueba de subida","text":"<p>Se crea un nuevo archivo de pruebas para comprobar que la subida a esta carpeta funciona y que cuando coloquemos el archivo dentro de <code>public_html</code>, los cambios se vean reflejados por los usuarios.</p> <p></p> <p>Nos conectamos de nuevo al servidor usando un cliente FTP, en mi caso Filezilla pero esta vez cambiamos el usuario <code>anes</code> por <code>daweb</code> y ponemos su respectiva contrase\u00f1a. Tras esto se sube dentro de la carpeta <code>public_html</code> el archivo html creado.</p> <p></p> <p>La prueba de que todo ha salido correcto se ve en la captura, al acceder a la misma ruta vemos que en vez de mostrar el antiguo archivo, muestra el nuevo que se ha subido por medio de SFTP.</p>"},{"location":"DAWEB/Tema%202/practica2-1/#referencias","title":"Referencias","text":"<ul> <li>Documentaci\u00f3n de Nginx</li> <li>Material del profesor</li> </ul>"},{"location":"DAWEB/Tema%202/practica2-2/","title":"Pr\u00e1ctica 2.2: Autenticaci\u00f3n en un servidor web Nginx","text":""},{"location":"DAWEB/Tema%202/practica2-2/#introduccion","title":"Introducci\u00f3n","text":"<p>En esta pr\u00e1ctica se va a implementar autenticaci\u00f3n en Nginx, esta ser\u00e1 la autenticaci\u00f3n <code>basic</code>  la cua\u013a es definida en el est\u00e1ndar de HTTP, aunque sirve para algunas pruebas no es un m\u00e9todo recomendado actualmente para la autenticaci\u00f3n de usuarios ya que existen otras mucho m\u00e1s seguras y completas.</p> <p>Para hacer esto necesitaremos el paquete openssl para poder crear las contrase\u00f1as, generalmente viene  instalado pero en caso de que no, ejecuta el siguiente comando en tu m\u00e1quina Debian 12, comprobar\u00e1 si  est\u00e1 instalado y en caso de que no, lo instalar\u00e1 autom\u00e1ticamente:</p> <pre><code>openssl -h 2&gt;/dev/null &amp;&amp; echo \"OpenSSL est\u00e1 instalado en el sistema\" || (sudo apt-get update &amp;&amp; sudo apt-get install -y openssl)\n</code></pre>"},{"location":"DAWEB/Tema%202/practica2-2/#anadir-autenticacion-basic-a-nginx","title":"A\u00f1adir autenticaci\u00f3n basic a Nginx","text":""},{"location":"DAWEB/Tema%202/practica2-2/#generar-usuarios-y-contrasenas","title":"Generar usuarios y contrase\u00f1as","text":"<p> Para poder usar la autenticaci\u00f3n \"basic\" de HTTP se debe de generar un usuario, contrase\u00f1a y guardarlo en un archivo para que mas tarde sea referenciado por alg\u00fan host configurado en Nginx y poder proteger las rutas haci\u00e9ndolas accesibles \u00fanicamente con los usuarios del archivo. Dicho archivo deber\u00e1 de tener la siguiente sint\u00e1xis: <pre><code>&lt;usuario&gt;:&lt;hash-contrase\u00f1a&gt;\n&lt;usuario&gt;:&lt;hash-contrase\u00f1a&gt;\n&lt;usuario&gt;:&lt;hash-contrase\u00f1a&gt;\n...\n</code></pre></p> <p>El primer comando que se ejecuta es para mostrar un mensaje con el nombre de usuario en terminal que es <code>echo</code> pero podemos redirigir la salida  del comando usando el operador de redirecci\u00f3n <code>&gt;&gt;</code>, esto permite hacer lo que se ha comentado pero sin aplastar todo el contenido del archivo,  a\u00f1adiendolo al final de este. El archivo como se ve en el comando es <code>.htpasswd</code> que se guardar\u00e1 dentro de <code>/etc/nginx</code>. </p> <p>El segundo comando usado lo que hace es usar el software <code>openssl</code> para generar el hash de la contrase\u00f1a que elijamos, el par\u00e1metro <code>apr1</code> indica que el hash generado usar\u00e1 el algoritmo MD5 con la variante de apache. Nos preguntar\u00e1 por la contrase\u00f1a de querramos hashear y escribir\u00e1  en la salida por defecto la contrase\u00f1a hasheada pero redirigimos la salida al archivo <code>.htpasswd</code>;</p> <p>Si nos fijamos los comandos est\u00e1n envuelto con otro que es <code>sh</code>  debido a que necesitamos permisos de administrador para guardar o crear el archivo en ese directorio usando el operador de redirecci\u00f3n.</p> <p>El uso de estos dos comandos reiteradas veces permitir\u00e1 crear los usuarios. Si necesitas esto en otro archivo diferente simplemente cambia el nombre del archivo al que rediriges la salida y ya tendr\u00e1s otro archivo con diferentes usuarios.</p>"},{"location":"DAWEB/Tema%202/practica2-2/#configurar-el-archivo-de-host-de-nginx","title":"Configurar el archivo de host de Nginx","text":"<p> Para poder proteger la web, se deber\u00e1 de a\u00f1adir dos directivas al archivo de host, estas directivas no se a\u00f1aden al bloque <code>server{...}</code> sino al bloque <code>location{...}</code> para as\u00ed poder tener en una misma web diferentes rutas las cuales unas est\u00e9n disponible a todos los usuarios y otras a los usuarios que permitamos nosotros por medio del archivo que hemos creado. Como se ve en la captura necesitamos a\u00f1adir las siguientes directivas:  </p> <ul> <li>auth_basic: con el mensaje que enviar\u00e1 al usuario si ha cancelado el inicio de sesi\u00f3n.</li> <li>auth_basic_user_file: ruta al archivo que hemos creado anteriormente. Puede estar en donde creas conveniente.</li> </ul>"},{"location":"DAWEB/Tema%202/practica2-2/#probamos-web","title":"Probamos web","text":""},{"location":"DAWEB/Tema%202/practica2-2/#inicio-de-sesion","title":"Inicio de sesi\u00f3n","text":"<p>Al acceder a la ruta nos saltar\u00e1 un formulario del navegador donde nos pide que introduzcamos los credenciales para acceder,  estos credenciales si todo sale como tiene que salir, son los dos creados anteriormente, <code>manuel</code> y <code>ruiz</code> cuya contrase\u00f1a  es el mismo usuario.</p>"},{"location":"DAWEB/Tema%202/practica2-2/#inicio-de-sesion-exitoso","title":"Inicio de sesi\u00f3n exitoso","text":"<p> Aqu\u00ed se puede comprobar que tras introducir los credenciales correctos podemos acceder a la web que ya ten\u00edamos. Si nos  fijamos en las cabeceras enviadas hay una muy importante que es <code>Authorization</code> donde indica que el tipo de autenticaci\u00f3n  es <code>basic</code> junto al usuario y contrase\u00f1a codificados en base64.</p>"},{"location":"DAWEB/Tema%202/practica2-2/#inicio-de-sesion-cancelado","title":"Inicio de sesi\u00f3n cancelado","text":"<p> Si cancelamos el inicio de sesi\u00f3n, la web mostrar\u00e1 el error 401 del est\u00e1ndar HTTP, este se muestra cuando un usuario intenta  acceder a un recurso protegido en un servidor sin introducir unas credenciales v\u00e1lidas. En la captura se puede ver en las  cabeceras de respuesta la cabecera <code>WWW-Authenticate</code> que indica de nuevo el tipo de autenticaci\u00f3n y una palabra clave  <code>realm</code> que contiene el mensaje que introducimos en el apartado anterior.</p>"},{"location":"DAWEB/Tema%202/practica2-2/#autenticacion-en-una-ruta-especifica-del-host","title":"Autenticaci\u00f3n en una ruta espec\u00edfica del host","text":"<p>Antes coment\u00e1bamos que pod\u00edamos proteger diferentes rutas del host en vez de todas a la vez, esto se hace creando  diferentes bloques <code>location{...}</code> que apunten a diferentes rutas del servidor y a\u00f1adiendo la autorizaci\u00f3n a las que veamos conveniente. Aqu\u00ed un ejemplo:</p>"},{"location":"DAWEB/Tema%202/practica2-2/#configuracion-del-archivo-de-host","title":"Configuraci\u00f3n del archivo de host","text":"<p>Como se ve en la captura tenemos otra ruta en el servidor que es <code>/noveas</code>, esta ruta ser\u00e1 que protejamos con la autenticaci\u00f3n por lo  que vamos a aprovechar la configuraci\u00f3n, y mover la configuraci\u00f3n de la autenticaci\u00f3n \u00fanicamente hacia el nuevo <code>location /noveas {...}</code>.</p> <p>Si nos fijamos la directiva <code>try_files</code> solo aparece una sola vez en vez de en los 2 bloques location, esto es porque en el primer  bloque apuntamos a todos los directorios del host, y el segundo location es un subdirectorio del host por lo que no es necesario usar esa directiva, podr\u00eda incluso fallar el servidor.</p> <p>Tras esto se reinicia nginx usando: <pre><code>sudo systemctl restart nginx\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-2/#subida-de-web-a-la-nueva-ruta","title":"Subida de web a la nueva ruta","text":"<p>Para probar la nueva configuraci\u00f3n vamos a crear un archivo de prueba m\u00e1s que solo ser\u00e1 accesible con contrase\u00f1a, entonces para subirlo  usar\u00e9 el cliente FTP Filezilla, iniciamos sesi\u00f3n en el servidor que configuramos en la anterior pr\u00e1ctica y dentro de la carpeta  correspondiente creamos el directorio <code>noveas</code>, y dentro metemos el archivo de nuestro sistema.</p>"},{"location":"DAWEB/Tema%202/practica2-2/#prueba-de-acceso-a-las-rutas-definidas","title":"Prueba de acceso a las rutas definidas","text":"<p>Si intentamos acceder a la ruta principal, veremos que no tenemos la autenticaci\u00f3n como antes ten\u00edamos.</p> <p></p> <p></p> <p>Al intentar acceder a la ruta <code>noveas</code> si que nos pedir\u00e1n autenticaci\u00f3n y al pasarles las credenciales correctas podemos ver que  nos permiten acceder al archivo index.html que subimos.</p>"},{"location":"DAWEB/Tema%202/practica2-2/#restriccion-de-acceso-por-ip","title":"Restricci\u00f3n de acceso por IP","text":"<p>Nginx nos permite tambi\u00e9n rechazar las peticiones de clientes con cierta IP, \u00fatil por ejemplo en una red local donde los equipos tengan todos una IP fija y as\u00ed permitir \u00fanicamente a ciertos equipos acceder a partes de la red.</p>"},{"location":"DAWEB/Tema%202/practica2-2/#configuracion-del-archivo-host","title":"Configuraci\u00f3n del archivo host","text":"<p>Para poder denegar el acceso a una IP debemos de usar la directiva <code>deny</code> la cu\u00e1l tiene 2 valores posibles:</p> <ul> <li>all: deniega el acceso a todas las IP.</li> <li>&lt;IP&gt;: Deniega el acceso a la ip que indiquemos.</li> </ul> <p>En mi caso para hacer la prueba voy a denegar el acceso a mi m\u00e1quina anfitriona para probar que deniega la conexi\u00f3n, por lo que coloco  la ip correspondiente y guardamos la configuraci\u00f3n.</p> <p>Tras esto se reinicia Nginx con: <pre><code>sudo systemctl restart nginx\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-2/#probamos-la-restriccion","title":"Probamos la restricci\u00f3n","text":"<p>Al intentar acceder a la ruta <code>noveas</code> con la nueva configuraci\u00f3n podemos ver que nos muestra un error 403.</p> <p>.</p> <p>Los logs que se ven en la captura indica que el acceso a la ruta ha sido denegado ya que el cliente coincide con la IP.</p>"},{"location":"DAWEB/Tema%202/practica2-2/#restriccion-por-ip-y-por-usuario-simultanea","title":"Restricci\u00f3n por IP y por usuario simult\u00e1nea","text":"<p>Nginx nos permite restringir el acceso tanto por IP y cuenta de usuario a la vez, permitiendo proteger recursos de accesos no  autorizados, esto se logra mediante la palabra clave <code>satisfy</code>, que permite los valores:</p> <ul> <li>any: Para que no devuelva 403, debe cumplir al menos la directiva de <code>auth</code> (no especifico la de basic ya que pueden haber de  diferentes tipos) o la directiva de restricci\u00f3n por IP.</li> <li>all: Esta es parecida a la anterior solo que obliga a cumplir todas las directivas.</li> </ul>"},{"location":"DAWEB/Tema%202/practica2-2/#configuracion-del-archivo-host_1","title":"Configuraci\u00f3n del archivo host","text":"<p>En la captura se muestra una configuraci\u00f3n que obliga a que el usuario se tenga que autenticar con una credencial v\u00e1lida y  que su IP coincida con <code>192.168.18.92</code> gracias a la directiva <code>allow</code>. Y si no coincide con esta, se rechazar\u00e1 la conexi\u00f3n  devolviendo el c\u00f3digo 403 ya que hemos puesto la directiva <code>deny all</code> para que rechace cualquier conexi\u00f3n.</p> <p>Es muy importante el orden ya que si colocamos <code>deny all</code> antes de la directiva <code>allow</code> se rechazar\u00e1n todas la conexiones ya  que las restricciones se aplican por orden de aparici\u00f3n en el bloque de configuraci\u00f3n</p>"},{"location":"DAWEB/Tema%202/practica2-2/#probamos-acceso","title":"Probamos acceso","text":"<p>Como podemos comprobar nos deja acceder ya que tenemos que la \u00fanica IP que puede acceder al recurso la tiene la m\u00e1quina anfitriona  pero necesitamos iniciar sesi\u00f3n ya que tambi\u00e9n tenemos configurada la autenticaci\u00f3n b\u00e1sica.</p> <p></p> <p>Aqu\u00ed podemos ver los logs de acceso y como en ellos se ve el que el usuario Manuel ha sido el que ha iniciado sesi\u00f3n</p>"},{"location":"DAWEB/Tema%202/practica2-2/#cuestiones","title":"Cuestiones","text":"<p>A continuaci\u00f3n se va a responder las cuestiones que se proponen en la pr\u00e1ctica</p> <p>Cuesti\u00f3n 1</p> <p>Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio web_muy_guay de mi sitio web, equivoc\u00e1ndome al poner el usuario y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9? <pre><code>location /web_muy_guay {\n    #...\n    satisfy all;    \n    deny  172.1.10.6;\n    allow 172.1.10.15;\n    allow 172.1.3.14;\n    deny  all;\n    auth_basic \"Cuesti\u00f3n final 1\";\n    auth_basic_user_file conf/htpasswd;\n}\n</code></pre> No podr\u00e1 acceder debido a la directiva <code>satisfy all</code> ya que aunque su IP sean de las permitidas, no cumple con la autenticaci\u00f3n b\u00e1sica ya que la directiva nombrada obliga a cumplir todas las condiciones.</p> <p>Cuesti\u00f3n 2</p> <p>Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio web_muy_guay de mi sitio web, equivoc\u00e1ndome al poner el usuario y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9? <pre><code>location /web_muy_guay {\n    #...\n    satisfy all;    \n    deny  all;\n    deny  172.1.10.6;\n    allow 172.1.10.15;\n    allow 172.1.3.14;\n\n    auth_basic \"Cuesti\u00f3n final 2: The revenge\";\n    auth_basic_user_file conf/htpasswd;\n}\n</code></pre> Para empezar no podr\u00e1 acceder al inicio de sesi\u00f3n por culpa de la directiva <code>deny all</code> ya que al ir antes que todas,  deniegan todas las peticiones al en <code>web_muy_guay</code> aunque despu\u00e9s la permita. Como se nombr\u00f3 en la pr\u00e1ctica, las restricciones se aplican por orden de aparici\u00f3n.</p> <p>Cuesti\u00f3n 3</p> <p>Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio web_muy_guay de mi sitio web, introduciendo correctamente usuario y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9? <pre><code>location /web_muy_guay {\n    #...\n    satisfy any;    \n    deny  172.1.10.6;\n    deny 172.1.10.15;\n    allow 172.1.3.14;\n\n    auth_basic \"Cuesti\u00f3n final 3: The final combat\";\n    auth_basic_user_file conf/htpasswd;\n}\n</code></pre> El cliente aunque tenga denegada la IP, al estar la directiva <code>satisfy any</code> va a permitir entrar a la web solo si pasa las credenciales  correctas ya que la directiva permite que pueda acceder a la web si cumple algunas de las directivas.</p> <p>Cuesti\u00f3n 4</p> <p>A lo mejor no sab\u00e9is que tengo una web para documentar todas mis excursiones espaciales con Jeff, es esta: Jeff Bezos y yo</p> <p>Supongamos que quiero restringir el acceso al directorio de proyectos porque es muy secreto, eso quiere decir a\u00f1adir autenticaci\u00f3n b\u00e1sica a la URL:Proyectos</p> <p>Completa la configuraci\u00f3n para conseguirlo: <pre><code>server {\n    listen 80;\n    listen [::]:80;\n    root /var/www/freewebsitetemplates.com/preview/space-science;\n    index index.html index.htm index.nginx-debian.html;\n    server_name freewebsitetemplates.com www.freewebsitetemplates.com;\n    location {\n        try_files $uri $uri/ =404;\n    }\n    # Mi aporte a la configuraci\u00f3n\n    location ~* /projects.html {\n        auth_basic  \"Estos son proyectos secret\u00edsimos con Bezos y yo, tu no entras aqu\u00ed.\";\n        auth_basic_user_file /etc/nginx/.bezosxme;\n    }\n}\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-2/#referencias","title":"Referencias","text":"<ul> <li>MDN</li> <li>Material del profesor</li> <li>Documentaci\u00f3n de Nginx</li> </ul>"},{"location":"DAWEB/Tema%202/practica2-3/","title":"Pr\u00e1ctica 2.3: Proxy inverso con Nginx","text":""},{"location":"DAWEB/Tema%202/practica2-3/#introduccion","title":"Introducci\u00f3n","text":"<p>Para configurar un servidor proxy, en esta pr\u00e1ctica vamos a clonar la m\u00e1quina virtual que ten\u00edamos, indicando previamente que genere una MAC para que al momento de obtener una IP no nos provoque ning\u00fan conflicto, para que nos entendamos en la pr\u00e1ctica tendremos la m\u00e1quina del <code>servidor web</code> que contendr\u00e1 la p\u00e1gina web que queremos mostrar, y la m\u00e1quina del <code>proxy</code> que se encargar\u00e1 de dirigir la petici\u00f3n al servidor y de devolver la respuesta de este al cliente.</p>"},{"location":"DAWEB/Tema%202/practica2-3/#configuracion-del-servidor-web","title":"Configuraci\u00f3n del servidor web","text":"<pre><code>sudo rm /etc/nginx/sites-available/web2-dwes.es\n</code></pre> <p>Para no tocar lo que ya tenemos funcionando, vamos a trabajar en una copia del archivo de configuraci\u00f3n del servidor web,  para empezar debemos de borrar el enlace simb\u00f3lico hacia la configuraci\u00f3n de la carpeta <code>sites-enabled</code>. Con esto, desactivaremos el host de la anterior pr\u00e1ctica.</p> <p></p> <p>Ahora copiamos el archivo de configuraci\u00f3n con el nuevo nombre que ser\u00e1 el cu\u00e1l vamos a modificar durante la pr\u00e1ctica</p> <p></p> <p>Cambiamos el puerto de la configuraci\u00f3n del host sin el cifrado, ya que no nos sirve ya este server para lo que queremos hacer ahora.</p> <p></p> <p>Habilitamos el sitio nuevo creando el enlace simb\u00f3lico al <code>sites-enabled</code>.</p> <p></p> <p>Comprobamos la configuraci\u00f3n y reiniciamos String</p>"},{"location":"DAWEB/Tema%202/practica2-3/#configuracion-del-proxy-inverso","title":"Configuraci\u00f3n del proxy inverso","text":"<p>Volvemos desactivar la web activa del servidor proxy ya que aqu\u00ed tendr\u00edamos la misma configuraci\u00f3n que en la pr\u00e1ctica anterior.</p> <p></p> <p>Creamos un archivo nuevo de configuraci\u00f3n ya que no nos hace falta rescatar nada de la antigua, en mi caso se llama <code>proxy</code> y se hace la configuraci\u00f3n b\u00e1sica con <code>listen</code>, <code>server_name</code> y la directiva importante, <code>proxy_pass</code>.  Esta directiva lo que har\u00e1 es pasar la petici\u00f3n a la URL que se le indique para que la resuelva esta, y el proxy esperar\u00e1 a que termine para devolversela al cliente.</p> <p></p> <p>Para que el proxy encuentre la web que tenemos funcionando en el servidor, debemos de a\u00f1adir en su archivo de hosts localizado en <code>/etc/hosts</code> la ip del servidor y el dominio que le hemos configurado anteriormente.</p> <p></p> <p>Activamos el proxy haciendo un enlace simb\u00f3lico a <code>sites enabled</code> del servidor del proxy.</p> <p></p> <p>Se comprueba que la configuraci\u00f3n es correcta usando el comando <code>sudo nginx -t</code> y despu\u00e9s se reincia el servidor web.</p>"},{"location":"DAWEB/Tema%202/practica2-3/#demostracion-del-servidor-proxy","title":"Demostraci\u00f3n del servidor proxy","text":"<p> Para comprobar que funciona correctamente nos dirigimos a la URL del proxy y podremos comprobar como nos muestra la p\u00e1gina configurada en la otra m\u00e1quina virtual sin que cambie la URL en el navegador.</p>"},{"location":"DAWEB/Tema%202/practica2-3/#modificar-respuesta-por-medio-del-proxy","title":"Modificar respuesta por medio del proxy","text":"<p>Para demostrar que desde el proxy podemos modificar la respuesta enviada por el servidor web, vamos a a\u00f1adir una cabecera a esta. Esto se har\u00e1 mediante la directiva <code>add_header &lt;nombre_cabecera&gt; &lt;valor_cabecera&gt;</code>. Esta cabecera puede estar dentro del bloque <code>server{...}</code>, <code>location{...}</code> o <code>http{...}</code> pero nosotros la pondremos dentro de location.</p>"},{"location":"DAWEB/Tema%202/practica2-3/#configuracion-del-servidor-web_1","title":"Configuraci\u00f3n del servidor web","text":"<p>Tambi\u00e9n pondremos la directiva dentro del servidor web ya que queremos ver como  aparece tanto las cabeceras del servidor como del proxy, en este caso a\u00f1adiremos la cabecera Host con el valor que se muestra en captura.</p> <p></p> <p>Ahora hacemos lo mismo pero en el proxy y cambiando el valor de la cabecera.</p>"},{"location":"DAWEB/Tema%202/practica2-3/#demostracion","title":"Demostraci\u00f3n","text":"<p>Aqu\u00ed se puede ver como las cabeceras a\u00f1adidas en las dos configuraciones son enviadas en la respuesta del proxy.</p>"},{"location":"DAWEB/Tema%202/practica2-4/","title":"Pr\u00e1ctica 2.4: Balanceo de carga con proxy inverso en Nginx","text":""},{"location":"DAWEB/Tema%202/practica2-4/#introduccion","title":"Introducci\u00f3n","text":""},{"location":"DAWEB/Tema%202/practica2-4/#clonacion","title":"Clonaci\u00f3n","text":"<p>Para comenzar esta pr\u00e1ctica debemos de clonar la m\u00e1quina virtual del servidor web, ya que necesitaremos una  replica del servidor para que la pr\u00e1ctica sea lo m\u00e1s fiel a la realidad posible.</p> <p>Un balanceo de carga tiene  como objetivo repartir la carga del tr\u00e1fico web entre servidores r\u00e9plica para  as\u00ed agilizar el tr\u00e1fico y que gane robustez ya que en caso de que caiga una r\u00e9plica, siempre habr\u00e1 otra  proporcionando servicio.</p>"},{"location":"DAWEB/Tema%202/practica2-4/#modificacion-del-servidor-web","title":"Modificaci\u00f3n del servidor web","text":"<p>Este servidor no es necesario hacer ning\u00fan cambio pero en mi caso le voy a modificar la cabecera para que sea diferente a la de la pr\u00e1ctica anterior.</p>"},{"location":"DAWEB/Tema%202/practica2-4/#modificacion-del-servidor-clonado","title":"Modificaci\u00f3n del servidor clonado","text":"<p>Para que no haga conflicto los nombres de dominio deberemos de cambiar este en alg\u00fan servidor, en mi caso ser\u00e1 el clonado para dejar el otro casi como en la pr\u00e1ctica anterior. Simplemente a la directiva <code>server_name</code> se le  cambia por la nueva direcci\u00f3n y se guarda.</p> <p>Para finalizar reiniciamos Nginx con <pre><code>sudo systemctl restart nginx\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-4/#cambio-de-host-del-proxy","title":"Cambio de host del proxy","text":"<p>Ahora en el servidor del proxy debemos a\u00f1adir la nueva entrada con el nuevo dominio para que Nginx lo detecte.</p> <p>Para finalizar reiniciamos Nginx con <pre><code>sudo systemctl restart nginx\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-4/#configuracion-del-proxy","title":"Configuraci\u00f3n del proxy","text":"<p>Ahora viene lo importante, para que Nginx actue como un balanceador de carga debemos de agrupar los servidores a los que Nginx enviar\u00e1 las peticiones, esto es posible mediante el bloque <code>upstream &lt;nombre-grupo&gt; {...}</code>. En este  bloque es donde se a\u00f1adir\u00e1n los servidores a los que Nginx redirigir\u00e1 las peticiones. Se hace mediante la directiva <code>server &lt;hostname|ip&gt;:&lt;puerto&gt;</code> como se ve en la captura de pantalla y podemos comprobar que tenemos tambi\u00e9n la  directiva <code>random</code>, que se usa para que rediriga la peticion a un servidor aleatorio de los a\u00f1adidos en el bloque.</p> <p>El \u00faltimo cambio a realizar es cambiar la directiva <code>proxy_pass</code> y cambiar la direcci\u00f3n al nombre elegido en el bloque  <code>upstream</code>.</p> <p>Para finalizar reiniciamos Nginx con <pre><code>sudo systemctl restart nginx\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-4/#demostracion","title":"Demostraci\u00f3n","text":"<p>Desactivamos con <code>sudo systemctl stop nginx</code> el servidor 1 (el origen) para comprobar que env\u00eda la petici\u00f3n al servidor clonado  ya que la cabecera que env\u00eda pertenece a este servidor</p> <p></p> <p>Desactivamos con <code>sudo systemctl stop nginx</code> el servidor 2 (el clonado) para comprobar que env\u00eda la petici\u00f3n al servidor  web de origen al que le pusismos de cabecera Host <code>servidor_web_wachiwachiwa_manueljesus</code>.</p>"},{"location":"DAWEB/Tema%202/practica2-4/#cuestiones","title":"Cuestiones","text":""},{"location":"DAWEB/Tema%202/practica2-4/#cuestion-1","title":"Cuesti\u00f3n 1","text":"<p>Enunciado</p> <p>Busca informaci\u00f3n de qu\u00e9 otros m\u00e9todos de balanceo se pueden aplicar con Nginx y describe al menos 3 de ellos.</p> <p>Los m\u00e9todos de balanceo que he encontrado son: </p> <ul> <li><code>least_conn</code>: Este m\u00e9todo de balanceo distribuir\u00e1 la carga de forma que las nuevas peticiones ir\u00e1n siempre  dirigidas a los servidores con menos conexiones activas.</li> <li><code>ip_hash</code>: Este m\u00e9todo de balanceo como dice su nombre, hace un hash de los 3 primeros octetos de la IPV4 o la IPV6 completa del cliente y seg\u00fan la IP, la dirige a un servidor. Este servidor ser\u00e1 siempre el que resuelva las peticiones del mismo cliente a no ser que no est\u00e9 disponible.</li> <li><code>least_time</code>: Este m\u00e9todo distribuye la carga tomando en cuenta el n\u00famero de conexiones activas y adem\u00e1s el tiempo de respuesta del servidor, priorizando los que menos conexiones y tiempo de respuesta tengan.</li> </ul>"},{"location":"DAWEB/Tema%202/practica2-4/#cuestion-2","title":"Cuesti\u00f3n 2","text":"<p>Enunciado</p> <p>Si quiero a\u00f1adir 2 servidores web m\u00e1s al balanceo de carga, describe detalladamente qu\u00e9 configuraci\u00f3n habr\u00eda que a\u00f1adir y d\u00f3nde.</p> <p>Si contamos que el servidor que a\u00f1adimos ya est\u00e1 configurado previamente ya que ser\u00eda una r\u00e9plica del servidor  al que queremos dar mas robustez o escalabilidad, \u00fanicamente habr\u00eda que tocar el archivo de configuraci\u00f3n del  proxy y en el bloque <code>upstream</code> correspondiente a\u00f1adir dos nuevas directivas: <pre><code>upstream servicio-reloco {\n    ...;\n    server &lt;host_servidor_1&gt;:&lt;puerto_servidor_1&gt;;\n    server &lt;host_servidor_2&gt;:&lt;puerto_servidor_2&gt;;\n}\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-4/#cuestion-3","title":"Cuesti\u00f3n 3","text":"<p>Enunciado</p> <p>Describe todos los pasos que deber\u00edamos seguir y configurar para realizar el balanceo de carga con una de las webs de pr\u00e1cticas anteriores.</p> <p>Indicad la configuraci\u00f3n de todas las m\u00e1quinas (webservers, proxy...) y de sus servicios</p> <p>Para realizar un balanceo de carga utilizando una web de las pr\u00e1cticas anteriores se deber\u00e1 primeramente de  preparar 3 m\u00e1quinas virtuales m\u00ednimo con NGINX. </p> <p>La primera m\u00e1quina es la que har\u00e1 de proxy la cual redirigir\u00e1 las peticiones a las m\u00e1quina que mejor venga en ese  momento, empecemos configur\u00e1ndolas en orden.</p>"},{"location":"DAWEB/Tema%202/practica2-4/#configuracion-del-servidor-web","title":"Configuraci\u00f3n del servidor web","text":"<p>Debemos de crear un archivo de configuraci\u00f3n en el directorio <code>/etc/nginx/sits-available</code> y que en mi caso  se llamar\u00e1 <code>webchuli</code> y su contenido ser\u00e1 el siguiente:</p> /etc/nginx/sites-available/webchuli<pre><code>server {\n    listen 80;\n    server_name web-chuli-rpl1.es;\n\n    root /home/webchuli/public_html;\n    index index.html;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n</code></pre> <p>Tras crear este archivo, se deber\u00e1 de crear el respectivo enlace simb\u00f3lico blando en el directorio <code>/etc/nginx/sites-enabled</code> con el siguiente comando: <pre><code>sudo ln -s /etc/nginx/sites-available/webchuli /etc/nginx/sites-enabled/\n</code></pre> Despu\u00e9s reiniciar el servicio con el comando:  <pre><code>sudo systemctl restart nginx\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-4/#configuracion-del-servidor-replica","title":"Configuraci\u00f3n del servidor r\u00e9plica","text":"<p>En la configuraci\u00f3n de la replica, al ser como dice su nombre, una r\u00e9plica del servidor web ya estar\u00edan  realizados los pasos anteriores solo faltar\u00eda cambiar el server_name para que no haga conflicto con el <code>server_name</code> de la m\u00e1quina original.</p> /etc/nginx/sites-available/webchuli<pre><code>server {\n    listen 80;\n    server_name web-chuli-rpl2.es;\n\n    root /home/webchuli/public_html;\n    index index.html;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n</code></pre>"},{"location":"DAWEB/Tema%202/practica2-4/#configuracion-del-proxy_1","title":"Configuraci\u00f3n del proxy","text":"<p>Para configurar la m\u00e1quina NGINX como un proxy inverso, lo haremos tal y como se ha descrito en toda la pr\u00e1ctica.</p> <p>Primero debemos de crear un bloque <code>upstream</code> en el que definiremos los servidores que hemos configurado anteriormente  y el m\u00e9todo de balanceo de carga. El elegido ser\u00e1 <code>least_time</code> que tal como se explic\u00f3 anteriormente redirigir\u00e1 las  peticiones al servidor con menor latencia y con menor carga de trabajo.</p> <p>Tras esto configuramos el servidor proxy, que funcionar\u00e1 bajo la URL de <code>web-muy-chuli.es</code> o <code>www.web-muy-chuli.es</code>  en y redireccionar\u00e1 las peticiones al grupo de servidores <code>web_chuli</code> definidos anteriormente gracias a la directiva <code>proxy_pass</code>. /etc/nginx/sites-available/webchuli-proxy<pre><code>upstream web_chuli {\n    least_time;\n    server web-chuli-rpl1.es:80;\n    server web-chuli-rpl2.es:80;\n}\nserver {\n    listen 80;\n    server_name web-muy-chuli.es www.web-muy-chuli.es;\n\n    location / {\n        proxy_pass http://web_chuli;\n    }\n}\n</code></pre></p> <p>Por \u00faltimo, ya que no usamos ning\u00fan DNS para resolver los nombres, debemos de a\u00f1adir al archivo  hosts del proxy las IP de las m\u00e1quinas virtuales que usemos en los servidores web, quedando de la siguiente forma siguiendo los nombres definidos: /etc/hosts<pre><code>&lt;ip-servidor-web&gt; web-chuli-rpl1.es\n&lt;ip-r\u00e9plica-servidor-web&gt; web-chuli-rpl2.es\n</code></pre></p> <p>Tras realizar las configuraciones indicadas, se deber\u00e1 de crear el respectivo enlace simb\u00f3lico blando en el directorio <code>/etc/nginx/sites-enabled</code> con el siguiente comando: <pre><code>sudo ln -s /etc/nginx/sites-available/webchuli-proxy /etc/nginx/sites-enabled/\n</code></pre> Despu\u00e9s reiniciar el servicio con el comando:  <pre><code>sudo systemctl restart nginx\n</code></pre></p> <p>Warning</p> <p>Se debe reiniciar despu\u00e9s de a\u00f1adir las IP al archivo hosts ya que nginx crashear\u00eda debido a que no encuentra los servidores indicados en el upstream</p> <p>Una vez realizado esto ya solo queda a\u00f1adir en el archivo hosts de tu sistema operativo la IP de tu proxy para probarlo tal y como se hizo al momento de configurar la m\u00e1quina proxy:</p> <ul> <li>En windows: C:\\Windows\\System32\\drivers\\etc\\hosts<pre><code>...\n&lt;ip-proxy&gt; web-muy-chuli.es www.web-muy-chuli.es\n</code></pre></li> <li>En Linux o Mac: /etc/hosts<pre><code>...\n&lt;ip-proxy&gt; web-muy-chuli.es www.web-muy-chuli.es\n</code></pre></li> </ul>"},{"location":"DAWEB/Tema%202/practica2-5/","title":"Practica 2.5: Proxy inverso y balanceo de carga con SSL en NGINX","text":""},{"location":"DAWEB/Tema%202/practica2-5/#introduccion","title":"Introducci\u00f3n","text":"<p>Para realizar esta pr\u00e1ctica vamos a reutilizar la 2.4, ya que lo \u00fanico que hay que hacerle es configurar el proxy y a\u00f1adirle un certificado SSL,  por lo que vamos a ello.</p> <p>Hay que tener en cuenta que normalmente se har\u00edan con certificados obtenidos de una autoridad certificadora fiable, pero como no podemos debido a que para ello el primer paso es tener el servidor abierto a internet, vamos a hacerlo con un certificado autogenerado. </p>"},{"location":"DAWEB/Tema%202/practica2-5/#creacion-del-certificado","title":"Creaci\u00f3n del certificado","text":"<p>Para generar el certificado deberemos de ejecutar el siguiente comando, sustituyendo los valores entre menor y mayor que por la ruta que mejor venga  para tu configuraci\u00f3n, yo la voy a poner en la ruta donde Ubuntu guarda los certificados y claves privadas: <pre><code>openssl req -x509 -newkey rsa:4096 -keyout &lt;private_key_file&gt; -out &lt;certificate_file&gt; -sha256 -days 365 --nodes\n</code></pre></p> <p></p> <p>Muy importante que en los dos \u00faltimos pasos coloquemos los valores que nos piden, en el caso del pen\u00faltimo los nombres de host donde se usar\u00e1 el certificado y un correo v\u00e1lido.</p>"},{"location":"DAWEB/Tema%202/practica2-5/#configuracion-del-proxy","title":"Configuraci\u00f3n del proxy","text":"<pre><code>server {\n        listen 443 ssl; # Cambiamos puerto al por defecto del protocolo HTTPS y a\u00f1adimos la directiva SSL\n        server_name proxy-dwes.es;\n\n        # A\u00f1adimos el certificado y su clave privada\n        ssl_certificate /etc/ssl/certs/proxy-cert.pem;\n        ssl_certificate_key /etc/ssl/private/proxy-cert-key.pem;\n\n        # Configuraci\u00f3n de protocolo SSL\n\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;      \n        ssl_ciphers HIGH:!aNULL:!MD5;        \n\n\n        location / {\n                proxy_pass https://servers_fuo;\n                add_header Host Proxy_Inverso_ManuelJesus;\n        }\n}\n</code></pre> <p>Tras a\u00f1adir estas directivas y cambiar el puerto, \u00fanicamente quedar\u00e1 reiniciar el servidor de NGINX para que se ejecute el servidor web con los nuevos cambios, esto con el siguiente comando: <pre><code>sudo systemctl restart nginx\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-5/#demostracion","title":"Demostraci\u00f3n","text":"<p>Al acceder a la web nos muestra un aviso de que el sitio encripta la informaci\u00f3n con un certificado autorfirmado, bien, eso significa que ha salido todo bien. Simplemente le damos a Avanzado... y al bot\u00f3n de Aceptar riesgo y continuar.</p> <p></p> <p>Como se ve, se muestra el contenido del servidor web a trav\u00e9s del proxy protegido por HTTPS.</p>"},{"location":"DAWEB/Tema%202/practica2-5/#cuestiones","title":"Cuestiones","text":""},{"location":"DAWEB/Tema%202/practica2-5/#cuestion-1","title":"Cuesti\u00f3n 1","text":"<p>Enunciado</p> <p>Hemos configurado nuestro proxy inverso con todo lo que nos hace falta pero no nos funciona y da un error del tipo This site can't provide a secure connection, ERR_SSL_PROTOCOL_ERROR.</p> <p>Dentro de nuestro server block tenemos esto: <pre><code>server {\n    listen 443;\n    ssl_certificate /etc/nginx/ssl/enrico-berlinguer/server.crt;\n    ssl_certificate_key /etc/nginx/ssl/enrico-berlinguer/server.key;\n    ssl_protocols TLSv1.3;\n    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;\n    server_name enrico-berlinguer;\n    access_log /var/log/nginx/https_access.log;\n\n    location / {\n        proxy_pass http://red-party;\n    }\n}\n</code></pre></p> <p>El error de esta configuraci\u00f3n est\u00e1 en la directiva <code>listen</code>, que falta a\u00f1adirle el par\u00e1metro <code>ssl</code> despu\u00e9s del puerto para habilitar el SSL. Quedar\u00eda de la siguiente forma la configuraci\u00f3n <pre><code>server {\n    listen 443 ssl; # cambio\n    ssl_certificate /etc/nginx/ssl/enrico-berlinguer/server.crt;\n    ssl_certificate_key /etc/nginx/ssl/enrico-berlinguer/server.key;\n    ssl_protocols TLSv1.3;\n    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;\n    server_name enrico-berlinguer;\n    access_log /var/log/nginx/https_access.log;\n\n    location / {\n        proxy_pass http://red-party;\n    }\n}\n</code></pre></p>"},{"location":"DAWEB/Tema%202/practica2-5/#cuestion-2","title":"Cuesti\u00f3n 2","text":"<p>Enunciado</p> <p>Imaginad que intentamos acceder a nuestro sitio web HTTPS y nos encontramos con el siguiente error:  Investigad qu\u00e9 est\u00e1 pasando y como se ha de solucionar: </p> <p>Es un error donde el certificado que usa el servidor NGINX ha sido retirado o revocado por la autoridad de certificaci\u00f3n  que lo ha expedido debido a diversos problemas, entre ellos dar informaci\u00f3n incorrecta durante la creaci\u00f3n del certificado y haci\u00e9ndolo inv\u00e1lido. Tambi\u00e9n puede deberse a problemas de conexi\u00f3n a la lista de certificados revocados de la autoridad y al no poder acceder para comprobar si es un certificado v\u00e1lido, da ese error.</p> <p>Para solucionar esto habr\u00eda que expedir un certificado nuevo y asegurarse que todo es correcto</p>"},{"location":"DAWEB/Tema%202/practica2-amp/","title":"Pr\u00e1ctica de amplicaci\u00f3n: Configuraci\u00f3n de un servidor Nginx con Hosts Virtuales y directorios de usuario","text":"<p>En esta pr\u00e1ctica se configurar\u00e1 un servidor web que servir\u00e1 diferentes rutas de los usuarios que vamos a crear en la misma pr\u00e1ctica</p> <p>Aviso</p> <p>Para no hacer excesivamente largo el documento, las capturas que requieran exactamente la misma configuraci\u00f3n cambiando por ejemplo el nombre de usuario, solo se har\u00e1 una vez.</p>"},{"location":"DAWEB/Tema%202/practica2-amp/#conexion-al-servidor","title":"Conexi\u00f3n al servidor","text":"<p>Para realizar la pr\u00e1ctica se har\u00e1 tal y como se pidi\u00f3 en clase, mediante SSH por lo que para demostrar esto dejo la captura de pantalla que  muestra como me conecto al servidor</p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-amp/#usuarios-y-carpetas","title":"Usuarios y carpetas","text":"<p>En este apartado se va a mostrar como crear los usuarios, la estructura de carpetas con sus permisos correspondientes y la p\u00e1gina de pruebas  para comprobar que todo funcione correctamente.</p>"},{"location":"DAWEB/Tema%202/practica2-amp/#creacion-de-usuarios","title":"Creaci\u00f3n de usuarios","text":"<p>Para crear los usuarios vamos a crearlos lo m\u00e1s b\u00e1sico posible ya que no lo usaremos como usuario de trabajo frecuente, \u00fanicamente nos hace falta que pueda iniciar sesi\u00f3n y que tenga su carpeta de usuario respectiva. Para ello usaremos los siguientes comandos: <pre><code>sudo useradd -m -s /bin/bash &lt;usuario&gt; # Crear el usuario con carpeta home y que su shell por defecto sea bash\nsudo passwd &lt;usuario&gt; # Definimos contrase\u00f1a al usuario\n</code></pre></p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-amp/#creacion-de-estructura-de-carpetas","title":"Creaci\u00f3n de estructura de carpetas","text":"<p>La carpeta a la que Nginx acceder\u00e1 ser\u00e1 <code>public_html</code>, el nombre por defecto de la carpeta donde est\u00e1 las p\u00e1ginas web en los directorios de usuario, por lo que para crear esta carpeta deberemos de:</p> <ol> <li>Iniciar sesi\u00f3n con el usuario y acceder a su carpeta home (<code>su &lt;usuario</code> y despu\u00e9s <code>cd ~</code>)</li> <li>Crear la carpeta la carpeta anteriormente mencionada (<code>mkdir public_html</code>)</li> <li> <p>Cambiar los permisos para que pueda acceder nginx. Estos permisos en vez de hacerlos de forma tradicional, lo haremos usando las ACL,     un sistema de permisos alternativo pero aceptado dentro de la comunidad de Linux, el cu\u00e1l trae por defecto instalado. </p> <p>Este lo que permite es crear una m\u00e1scara de permisos mas espec\u00edfica completa, permiti\u00e9ndonos hacer de forma sencilla lo que queremos  en este caso que es que el usuario de nginx <code>www-data</code> pueda acceder a la carpeta y a los nuevos archivos que el usuario vaya creando  dentro de esta carpeta. El comando ser\u00eda el siguiente:  <pre><code>setfacl -d -R -m u:www-data:rw public_html\n</code></pre></p> <p>El comando usa una serie de argumentos y despu\u00e9s la carpeta o archivo donde se aplicar\u00e1 la m\u00e1scara de permisos especiales. Los par\u00e1metros que hemos usado son:</p> <ul> <li><code>-d</code>: Indica que cada archivo nuevo o directorio dentro de esta carpeta, se aplicar\u00e1 la regla ACL de m\u00e1s abajo</li> <li><code>-R</code>: Se aplicar\u00e1 de forma recursiva, in\u00fatil ahora mismo ya que no hay ning\u00fan archivo creado pero por costumbre prefiero ponerlo.</li> <li> <p><code>-m</code>: Par\u00e1metro para indicar la regla ACL que queremos aplicar al archivo, sigue este patr\u00f3n <code>&lt;(u|g)&gt;:&lt;(usuario | grupo)&gt;:&lt;r | w | x&gt;</code>. </p> <p>Para entender el patr\u00f3n lo dividiremos en tres partes, en la primera indicamos a que va a aplicar la regla, si a un usuario o un grupo, en la segunda parte a que usuario o grupo afectar\u00e1 la regla y en la tercera el permiso que tendr\u00e1 ese usuario o grupo. </p> <p>Algo extra a a\u00f1adir, es que en el patr\u00f3n podemos a\u00f1adir mas tipos de ACL, es decir a parte de usuario y grupo pues podemos a\u00f1adir tambi\u00e9n  a \"otros usuarios\" para establecer los permisos del archivo o directorio en general pero este por ejemplo desde mi opini\u00f3n es mas \u00fatil  establecerlo con el sistema tradicional de permisos de linux, es decir con <code>chmod</code>.</p> </li> </ul> </li> </ol> <p>Tras esto para comprobar que todo funciona correctamente se usa el siguiente comando para ver si las ACL son correctas: <pre><code>getfacl &lt;ruta_carpeta&gt;\n</code></pre></p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-amp/#creacion-de-paginas-webs-estaticas","title":"Creaci\u00f3n de p\u00e1ginas webs est\u00e1ticas","text":"<p>Para comprobar que todo es correcto se crear\u00e1 un archivo <code>index.html</code> para cada usuario en su carpeta <code>public_html</code>, con el fin de que se  muestre como p\u00e1gina principal y comprobar que todo funciona correcamente.</p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-amp/#nginx","title":"Nginx","text":""},{"location":"DAWEB/Tema%202/practica2-amp/#instalacion-de-nginx","title":"Instalaci\u00f3n de NGINX","text":"<p>Para poder instalar Nginx en Debian 12 tenemos dos formas, mediante APT y manualmente, obviamente lo haremos mediante el gestor de paquetes APT ya que es m\u00e1s c\u00f3modo y m\u00e1s r\u00e1pido y no nos hace falta una versi\u00f3n en espec\u00edfico antigua.</p> <p>Se ejecutar\u00e1n los siguientes comandos (aunque en la captura salgan en una sola l\u00ednea): <pre><code>sudo apt-get update # Actualiza la lista de repositorios\nsudo apt-get upgrade # Actualiza los paquetes que tengan una nueva versi\u00f3n disponible\nsudo apt-get install nginx # Instala el servidor web Nginx\n</code></pre></p> <p></p> <p>Para comprobar que est\u00e1 funcionando se puede hacer el comando <code>systemctl status nginx</code> y comprobar el estado del servicio pero tambi\u00e9n  podemos intentar acceder al servidor web mediante un navegador y comprobar que muestra la p\u00e1gina web por defecto de Nginx, como en la captura.</p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-amp/#configuracion-basica-de-nginx","title":"Configuraci\u00f3n b\u00e1sica de NGINX","text":"<p>La configuraci\u00f3n por defecto de NGINX que nos proporciona APT para este ejemplo nos ser\u00e1 mas que suficiente para realizar la pr\u00e1ctica,  lo que si haremos es la configuraci\u00f3n de los hosts pero esto ser\u00e1 m\u00e1s adelante.</p>"},{"location":"DAWEB/Tema%202/practica2-amp/#generar-certificado-para-https","title":"Generar certificado para HTTPS","text":"<p>Para hacer que NGINX sirva la p\u00e1gina web usando HTTPS como ya sabemos necesitamos indicarle que certificado usar para cifrar los datos, para ello normalmente se usa uno que nos proporcionar\u00eda una autoridad certificadora oficial, pero como para ello necesitamos que primeramente el servidor est\u00e9 ya en Internet y no en nuestra red local, usaremos directamente uno autofirmado, el cual se generar\u00e1 con el siguiente comando. <pre><code>openssl req -x509 -newkey rsa:4096 -keyout &lt;private_key_file&gt; -out &lt;certificate_file&gt; -sha256 -days 365 --nodes\n</code></pre></p> <p>Este comando para entenderlo lo deglosaremos en sus par\u00e1metros:</p> <ul> <li>req: comando que indica a openssl que vas a iniciar una petici\u00f3n de firmado de certificado.</li> <li>x509: indica que usar\u00e1 la estructura de certificado X.509.</li> <li>newkey: indica que generar\u00e1 una clave usando el algoritmo indicado despues con <code>&lt;algoritmo&gt;:&lt;bits&gt;</code>.</li> <li>keyout: archivo donde se guardar\u00e1 la clave privada.</li> <li>out: archivo donde se guardar\u00e1 el certificado.</li> <li>sha256: indicamos que el certificado usar\u00e1 SHA-256 para calcular el hash.</li> <li>days: n\u00famero de d\u00edas de v\u00e1lidez del certificado.</li> <li>nodes: no encripta la clave privada, por lo que no nos pedir\u00e1 contrase\u00f1a para la clave. Lo usamos aqu\u00ed para que no de problemas con Nginx al momento de importarla en el host. Recomendable usar el par\u00e1metro <code>noenc</code> ya que <code>nodes</code> est\u00e1 en desuso pero aun funciona.</li> </ul> <p>Los certificados los generar\u00e9 en el directorio <code>/etc/ssl/certs/</code> y su correspondiente clave privada en <code>/etc/ssl/private</code>, uno por cada dominio.</p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-amp/#creacion-de-los-hosts-virtuales","title":"Creaci\u00f3n de los hosts virtuales","text":"<p>Para crear los hosts virtuales, tendremos en cuenta que ya se servir\u00e1n encriptados los datos, pero para que quede lo mejor posible, tambi\u00e9n haremos la configuraci\u00f3n para el protocolo HTTP que redirigir\u00e1 a HTTPS y as\u00ed no muestra un error feo al usuario.</p> <p>Empezemos con la redirecci\u00f3n ya que es lo m\u00e1s sencillo, en el mismo archivo de configuraci\u00f3n del host virtual crearemos un bloque <code>server {...}</code> con dicha configuraci\u00f3n, quedar\u00eda de la siguiente forma:  /etc/nginx/sites-available/porri<pre><code>...\nserver {\n    # Escucha en el puerto 80 por IPV4\n    listen 80; \n    # Escucha en el puerto 80 por IPV6\n    listen [::]:80;\n\n    # Nombre del host que est\u00e1 escuchando\n    server_name &lt;nombre_host&gt;; \n\n    location / {\n        # Redirecci\u00f3n hacia HTTPS al mismo host y mismo recurso.\n        return 301 https://$host:$request_uri; \n    }\n}\n...\n</code></pre></p> <p>Una vez hecha la redirecci\u00f3n vamos a hacer la configuraci\u00f3n del host para el puerto 443: /etc/nginx/sites-available/porri<pre><code>...\nserver {\n    # Escucha en el puerto 443 por IPV4\n    listen 443 ssl; \n    # Escucha en el puerto 443 por IPV6\n    listen [::]:443 ssl;\n\n    # Directorio del que servir\u00e1 los archivos, en este caso la carpeta \n    # public_html de los usuarios\n    root &lt;direccion_raiz_servidor&gt;;\n\n    # Rutas a los archivos generados del certificado\n    ssl_certificate &lt;direccion_certificado_tls-ssl&gt;;\n    ssl_certificate_key &lt;direccion_clave_privada_certificado_tls-ssl&gt;;\n\n    # Archivo que buscar\u00e1 de \u00edndice\n    index index.html;\n\n    # Nombre del host que est\u00e1 escuchando\n    server_name &lt;nombre_host&gt;; \n\n    location / {\n        # Redirecci\u00f3n hacia HTTPS al mismo host y mismo recurso.\n        return 301 https://$host:$request_uri; \n    }\n}\n...\n</code></pre></p> <p>Si nos fijamos, faltan algunas directivas como por ejemplo la que indica el tipo de cifrado, si usa SSL, TLS, etc... Esto podemos saltarlo gracias a que est\u00e1 configurado en el archivo principal de configuraci\u00f3n de nginx de <code>/etc/nginx/nginx.conf</code>.</p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-amp/#habilitacion-de-los-hosts-virtuales","title":"Habilitaci\u00f3n de los hosts virtuales","text":"<p>Para habilitar los hosts virtuales debemos de crear un enlace simb\u00f3lico de las configuraciones que acabamos de hacer al directorio  <code>/etc/nginx/sites-enabled</code>, para ello usaremos el siguiente comando: <pre><code>sudo ln -s /etc/nginx/sites-available/&lt;archivo_configuraci\u00f3n&gt; /etc/nginx/sites-enabled\n</code></pre></p> <p>Una vez hecho este comando debemos de ejecutar el comando que comprueba si la configuraci\u00f3n actual es correcta: <pre><code>sudo nginx -t\n</code></pre></p> <p>Si sale que todo es correcto, ya podremos reiniciar el servicio de Nginx con el siguiente comando para comprobar el acceso a las webs: <pre><code>sudo systemctl restart nginx\n</code></pre></p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-amp/#anadir-al-host-del-anfitrion-nombre-de-hosts","title":"A\u00f1adir al host del anfitri\u00f3n nombre de hosts","text":"<p>Para poder acceder a los hosts virtuales debemos de dirigirnos al dominio que hemos configurado en las directivas <code>server_name</code>, de forma normal  esto se har\u00eda mediante un servidor DNS, pero debido a que no lo tenemos instalado ni tampoco comprado un dominio, debemos de modificar el archivo <code>hosts</code> de nuestro sistema operativo para que esos dominios hagan referencia a la m\u00e1quina virtual. </p> <p>En todos los sistemas operativos principales usan el mismo formato, lo \u00fanico que puede cambiar el donde lo almacenan. En la captura se muestra en un sistema operativo UNIX-Like, pero en  Windows se encuentra en <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code>.</p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-amp/#prueba-de-funcionamiento-de-los-hosts","title":"Prueba de funcionamiento de los hosts","text":"<p>Ahora probaremos acceder a cada dominio con un navegador web, mostraremos el aviso de que usa un certificado autofirmado para encriptar los datos, la web y el certificado generado de cada dominio</p>"},{"location":"DAWEB/Tema%202/practica2-amp/#porri-web","title":"Porri web","text":"<p>Aviso de que usa un certificado autofirmado </p> <p>Mostramos la Porri web </p> <p>Mostramos certificado SSL/TLS</p> <p></p>"},{"location":"DAWEB/Tema%202/practica2-amp/#churrunchilla-web","title":"Churrunchilla web","text":"<p>Aviso de que usa un certificado autofirmado </p> <p>Mostramos la Churrunchilla web </p> <p>Mostramos certificado SSL/TLS </p>"},{"location":"DAWEB/Tema%203/practica3-1/","title":"Pr\u00e1ctica 3.1: Instalaci\u00f3n de Tomcat y Maven para despliegue de aplicaci\u00f3n Java","text":""},{"location":"DAWEB/Tema%203/practica3-1/#tomcat","title":"Tomcat","text":"<p>Tomcat es un servidor de aplicaciones Java muy conocido que permite gestionar instancias de aplicaciones webs y desplegarlas  de forma autom\u00e1tica o de forma manual. En esta pr\u00e1ctica veremos como instalarlo en Debian 12 y como desplegar aplicaciones  en el servidor, tanto manual como autom\u00e1ticamente</p>"},{"location":"DAWEB/Tema%203/practica3-1/#prerequisitos","title":"Prerequisitos","text":"<p>Para poder instalar Tomcat, debemos instalar Java ya que est\u00e1 desarrollado en esa tecnolog\u00eda, en mi caso voy a instalar la versi\u00f3n 17 ya que es la versi\u00f3n por defecto que ofrecen los repositorios oficiales de Debian 12. Para ello instalamos  el JRE, ya que para ejecutar aplicaciones, no nos hace falta el JDK. <pre><code>sudo apt-get install default-jre\n</code></pre> A d\u00eda de 12-11-2024 la versi\u00f3n por defecto es la 17, en un futuro es posible que cambie por lo que deber\u00e1s de tenerlo  en cuenta y asegurarte de que la versi\u00f3n de Tomcat sea compatible con esa.</p> <p></p> <p>Si todo ha salido bien, al usar java --version deber\u00eda de imprimir la versi\u00f3n instalada tal y como en la captura de pantalla.</p>"},{"location":"DAWEB/Tema%203/practica3-1/#instalacion-de-tomcat","title":"Instalaci\u00f3n de Tomcat","text":"<p>Para instalar Tomcat 10, Debian 12 ofrece en sus repositorios oficiales un paquete para que su instalaci\u00f3n sea  lo m\u00e1s sencilla posible en su sistema, por lo que tiraremos de ese paquete usando el comando que se muestra en la captura  para comenzar con su instalaci\u00f3n. <pre><code>sudo apt-get install tomcat10 tomcat10-admin # tomcat10-docs\n</code></pre> El paquete tomcat10-docs es para que puedas tener su documentaci\u00f3n offline, instalar si lo ves necesario.</p> <p></p> <p>IMPORTANTE</p> <p>Si tienes una aplicaci\u00f3n que est\u00e9 escuchando en el puerto <code>8080</code>, Tomcat no podr\u00e1 iniciar a no ser que cambies el puerto en Tomcat o cierres la aplicaci\u00f3n.</p> <p>Una vez instalado solo queda ejecutar el servicio con el comando: <pre><code>sudo systemctl start tomcat10\n</code></pre></p> <p>Este comando no es necesario ponerlo siempre ya que al instalar tomcat, apt configura tomcat para que se ejecute al inicio del servidor, en caso de que no haga esto simplemente ejecutar el comando: </p> <pre><code>sudo systemctl enable tomcat10\n</code></pre> <p>Y cuando reinicies el servidor se ejecutar\u00e1 al inicio.</p> <p>Entonces ya podr\u00e1s entrar a la aplicaci\u00f3n web de Tomcat, en la siguiente URL: <code>http://&lt;direcci\u00f3n_servidor&gt;:8080</code>. Se mostrar\u00eda algo como en la captura de pantalla</p>"},{"location":"DAWEB/Tema%203/practica3-1/#configuracion-tomcat","title":"Configuraci\u00f3n tomcat","text":"<p>Para poder usar el panel de administraci\u00f3n debemos de crear un usuario de en el XML de configuraci\u00f3n de Tomcat, en este caso al instalarlo con apt, este archivo est\u00e1 en la ruta que muestra el directorio que muestra el bloque de c\u00f3digo.</p> <p>Para crear un usuario nos tenemos que posicionar dentro de la etiqueta <code>&lt;tomcat-users&gt;</code>, y escribir la etiqueta <code>user</code> que contendr\u00e1 un atributo para el nombre de usuario, otro para la contrase\u00f1a y otro para escribir los roles del usuario separados por coma. /etc/tomcat10/tomcat-users.xml<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n... \n&lt;tomcat-users xmlns=\"http://tomcat.apache.org/xml\"\n              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n              xsi:schemaLocation=\"http://tomcat.apache.org/xml tomcat-users.xsd\"\n              version=\"1.0\"&gt;\n&lt;!--Comentarios que explica el tema de la configuraci\u00f3n del usuario--&gt;\n  &lt;user username=\"anes\" password=\"anes\" roles=\"admin-gui,manager-gui\"/&gt;\n</code></pre></p> <p>Una vez hecho esto deberemos de guardar el archivo y reinciar el servicio de Tomcat para que cargue el usuario creado, esto se hace con el siguiente comando:  <pre><code>sudo systemctl restart tomcat10\n</code></pre></p>"},{"location":"DAWEB/Tema%203/practica3-1/#acceso-al-panel","title":"Acceso al panel","text":"<p>Para comprobar accedemos a la URL <code>/manager/html</code>, entonces nos pedir\u00e1 un usuario y contrase\u00f1a por medio de Basic Authentication, le indicamos el que hemos creado en el archivo XML e iniciamos sesi\u00f3n</p> <p></p> <p>Si todo ha salido como deb\u00eda, se debe de mostrar un panel como en el de la siguiente captura, en el que podremos desplegar y gestionar las aplicaciones web de Java.</p> <p></p>"},{"location":"DAWEB/Tema%203/practica3-1/#despliegue-manual-de-jar","title":"Despliegue Manual de Jar","text":"<p>Enlace de descarga del WAR</p> <p>https://tomcat.apache.org/tomcat-6.0-doc/appdev/sample/</p> <p>Para comprobar que el despliegue de aplicaciones se hace correctamente, usaremos el WAR de prueba proporcionado por Tomcat debido a que el WAR proporcionado por Moodle por alguna raz\u00f3n crasheaba al hacer el intento de despliegue.</p> <p></p> <p>Para subirlo de forma manual por medio del GUI, Tomcat nos proporciona un dos formularios, uno donde podemos desplegar un WAR que ya est\u00e1 presente en el sistema de archivos del servidor, o subir desde nuestro equipo el WAR, que ser\u00e1 el formulario que usaremos, elegiremos el archivo usando el campo correspondiente y daremos click en el bot\u00f3n de Desplegar.</p> <p></p> <p>Como se ve en el listado de aplicaciones se muestra la aplicaci\u00f3n sample que es la que hemos subido, y el bot\u00f3n de <code>Desplegar</code> est\u00e1 desactivado nos indica que est\u00e1 en ejecuci\u00f3n la aplicaci\u00f3n web.</p> <p>Para acceder a ella y probar haremos click sobre le nombre de la aplicaci\u00f3n web, que nos redirigir\u00e1 a la URL donde se despleg\u00f3.</p> <p></p> <p>Como se ve en la captura, la app funciona correctamente por lo que ya podemos ir al siguiente punto.</p>"},{"location":"DAWEB/Tema%203/practica3-1/#despliegue-automatico","title":"Despliegue autom\u00e1tico","text":"<p>Cuando trabajamos con un proyecto de Java Maven, esta herramienta nos permite entre otras, desplegar la aplicaci\u00f3n cuando  sintamos que est\u00e1 preparada para producci\u00f3n (en verdad se usar\u00eda CI/CD pero para esta pr\u00e1ctica lo haremos as\u00ed).</p>"},{"location":"DAWEB/Tema%203/practica3-1/#instalacion-de-maven","title":"Instalaci\u00f3n de Maven","text":"<p>Para configurar un proyecto Maven con esa funcionalidad, el primer paso es tener instalado Maven que tiene un paquete  en los repositorios de Debian 12, por lo que nos valdremos del siguiente comando para instalarlo.</p> <p><pre><code>sudo apt-get install maven\n</code></pre> </p> <p>Para comprobar que ha sido instalado correctamente simplemente ejecutamos el comando que se ve en la captura para que  muestre la versi\u00f3n de maven instalada.</p>"},{"location":"DAWEB/Tema%203/practica3-1/#configuracion-de-usuario-de-tomcat-para-maven","title":"Configuraci\u00f3n de usuario de Tomcat para Maven","text":"<p>Para poder desplegar desde Maven, se recomienda crear en Tomcat un usuario exclusivamente para esta tarea que tenga el rol de  <code>manager-script</code> que da acceso al usuario usar la API HTTP de Tomcat</p> <p></p> <p>Se deber\u00e1 de hacer en el mismo fichero donde se creo el usuario del administrador de aplicaciones web, es decir <code>/etc/tomcat10/tomcat-users.xml</code></p> <p>Se guarda el archivo y se reinicia el servicio de Tomcat para que cargue el usuario creado con el comando: <pre><code>sudo systemctl restart tomcat10\n</code></pre></p>"},{"location":"DAWEB/Tema%203/practica3-1/#anadir-usuario-al-listado-de-servidores-de-maven","title":"A\u00f1adir usuario al listado de servidores de Maven","text":"<p>Ahora tenemos que a\u00f1adir en la configuraci\u00f3n de servidores de Maven las credenciales del usuario de Tomcat para que cuando llegue el momento de despliegue, las obtenga de ah\u00ed. Por lo que primeramente modificaremos el archivo <code>/etc/maven/settings.xml</code>, buscando la etiqueta <code>servers</code> y a\u00f1adiendo una etiqueta <code>server</code> dentro de esta que contendr\u00e1 3 etiquetas dentro:</p> <ul> <li><code>id</code>: Id del servidor en maven, puede ser el que quieras</li> <li><code>username</code>: usuario del servidor, en este caso el de Tomcat</li> <li><code>password</code>: contrase\u00f1a del servidor, en este caso la de Tomcat</li> </ul> <p></p> <p>Guardamos el archivo y vayamos al siguiente paso</p>"},{"location":"DAWEB/Tema%203/practica3-1/#configurar-un-proyecto-de-java-maven","title":"Configurar un proyecto de Java Maven","text":"<p>Para este paso necesitaremos un proyecto Java que use Maven, podemos generarlo con un archetype pero en este caso usaremos el repositorio que la pr\u00e1ctica propone para la tarea 1 y as\u00ed matar dos p\u00e1jaros de un solo tiro. Clonamos el repo con el siguiente comando, que despu\u00e9s acceder\u00e1 para cambiar la rama a <code>patch-1</code>. <pre><code>git clone https://github.com/cameronmcnz/rock-paper-scissors.git &amp;&amp; cd rock-paper-scissors &amp;&amp; git checkout patch-1\n</code></pre></p>"},{"location":"DAWEB/Tema%203/practica3-1/#configuracion-del-pom","title":"Configuraci\u00f3n del POM","text":"<p>Una vez aqu\u00ed debemos de acceder al fichero <code>pom.xml</code> que es el que usa Maven para configurar un proyecto Java, pues dentro de este debemos de buscar la etiqueta <code>plugins</code> y asegurarnos que est\u00e9 contenida por <code>build</code> (no tiene que ser hijo directo). Una vez localizado debemos de crear una etiqueta <code>plugin</code> que contenga exactamente el mismo contenido que el \u00faltimo plugin de la captura, vamos a saltar directamente a la etiqueta <code>configuration</code> ya que las dem\u00e1s son comunes de maven: </p> <ul> <li><code>url</code>: Url de tomcat a la que se conectar\u00e1 para subir los cambios, esta ser\u00e1 la direcci\u00f3n al servidor de Tomcat mas el path <code>/manager/text</code>.</li> <li><code>server</code>: Aqu\u00ed colocaremos el id del servidor que configuramos en el paso anterior para que obtenga las credenciales para el deploy</li> <li><code>path</code>: Ser\u00e1 la ruta donde se desplegar\u00e1 la aplicaci\u00f3n</li> </ul> <p></p>"},{"location":"DAWEB/Tema%203/practica3-1/#despliegue-del-proyecto","title":"Despliegue del proyecto","text":"<p>Para desplegar nos valdremos del comando <code>mvn tomcat7:deploy</code> que se encargar\u00e1 de compilar y mandar los archivos compilados al servidor de tomcat  seg\u00fan los par\u00e1metros configurados previamente. Tal y como se hace en la siguiente captura con el resultado de lo que deber\u00eda salir si todo sale bien.</p> <p></p> <p>Ahora accedemos al panel de Tomcat para comprobar que la aplicaci\u00f3n fue desplegada con \u00e9xito</p> <p></p> <p>Para terminar comprobaremos si funciona la aplicaci\u00f3n web descargada, accediendo a la ruta donde la desplegamos</p> <p></p>"},{"location":"DAWEB/Tema%203/practica3-1/#cuestiones","title":"Cuestiones","text":"<p>Cuesti\u00f3n 1</p> <p>Hab\u00e9is visto que los archivos de configuraci\u00f3n que hemos tocado contienen contrase\u00f1as en texto plano, por lo que cualquiera con acceso a ellos obtendr\u00eda las credenciales de nuestras herramientas.</p> <p>En principio esto representa un gran riesgo de seguridad, \u00bfsabr\u00edas razonar o averig\u00fcar por qu\u00e9 esto est\u00e1 dise\u00f1ado de esta forma?</p> <p>Esto es debido a que se espera que el administrador del sistema al instalar tomcat, estos ficheros \u00fanicamente sean accesibles por root y por el  usuario que ejecuta Tomcat y por ninguno m\u00e1s, para as\u00ed proteger las contrase\u00f1as, tal y como el archivo <code>/etc/shadow</code> que no puede verlo nadie sin permisos de administrador.</p>"},{"location":"DAWEB/Tema%203/practica3-2/","title":"Pr\u00e1ctica 3.2: Despliegue de aplicaciones con Node Express y en Netlify","text":"<p>Nono no intentes arreglarlo</p>"},{"location":"DAWEB/Tema%203/practica3-2/#instalacion-de-nodejs","title":"Instalaci\u00f3n de NodeJS","text":"<p>NodeJS es un entorno de ejecuci\u00f3n de Javascript que permite interpretar archivos JS sin necesidad de un navegador, haciendo que con el mismo lenguaje de programaci\u00f3n que en la web, puedas contruir aplicaciones de servidor, y a d\u00eda de hoy con todos los avances es una de las opciones mas recomendadas para ello, aunque influye tambi\u00e9n el tipo de proyecto.</p> <p>Para instalar NodeJS simplemente ejecutamos el comando que aparece en la pantalla <pre><code>sudo apt-get update &amp;&amp; sudo apt-get install nodejs npm\n</code></pre> </p> <p>El segundo paquete es <code>npm</code>, el gestor de dependencias por defecto de NodeJS. Es muy recomendable tenerlo instalado para poder usar librerias ya hechas, como ExpressJS.</p>"},{"location":"DAWEB/Tema%203/practica3-2/#despliegue-con-nodejs","title":"Despliegue con NodeJS","text":"<p>Desplegar una aplicaci\u00f3n de NodeJS, es muy sencillo ya que podemos centralizarlo todo en un comando definido dentro del <code>package.json</code>,  fichero donde se define la informaci\u00f3n del proyecto de nodejs y sus dependencias.</p>"},{"location":"DAWEB/Tema%203/practica3-2/#clonacion-del-proyecto-express","title":"Clonaci\u00f3n del proyecto Express","text":"<p>Para probar esto usaremos una aplicaci\u00f3n de prueba que usa la librer\u00eda ExpressJS para poner una aplicaci\u00f3n web a la escucha, vamos al repositorio y lo clonamos con el comando que se ve en pantalla.</p> <p></p> <p>Una vez clonada la carpeta, accedemos a esta e instalamos todas las dependencias necesarias del proyecto, esto se hace  mediante el comando <code>npm install</code>, que se puede usar para instalar una dependencia en espec\u00edfico en un proyecto de Node o para instalar las dependencias que usa un proyecto, en este caso lo usaremos para instalar las necesarias del proyecto ejecutando el comando sin ning\u00fan par\u00e1metro o colocando un <code>.</code> que indica el directorio actual en el caso que estemos en la ra\u00edz del proyecto.</p> <p></p> <p>Ahora para probar que funciona todo correctamente, usamos el comando <code>npm start</code> que es un script por defecto de npm que permite ejecutar un comando, que se indica en el archivo <code>package.json</code></p> <p></p> <p>Si nos fijamos, nos da un error al intentar ejecutar el proyecto de NodeJS, esto es debido a que no encuentra la dependencia de <code>nodemon</code> ni en el sistema ni en el proyecto.</p>"},{"location":"DAWEB/Tema%203/practica3-2/#arreglo-del-fallo","title":"Arreglo del fallo","text":"<p>nodemon not found</p> <p>Buscad c\u00f3mo solucionar este problema y, tras ello, iniciad la aplicaci\u00f3n sin problemas.</p> <p>\u00bfQu\u00e9 comando hab\u00e9is usado para solucionar el fallo anterior?\u00bfCu\u00e1l es su cometido?\u00bfQu\u00e9 archivo se ha modificado al ejecutarlo? Docum\u00e9ntalo todo en el informe de la pr\u00e1ctica. </p> <p>Para arreglar el fallo he usado el comando de <code>npm install nodemon</code>, el cu\u00e1l como he explicado anteriormente se usa para instalar dependencias de proyectos, e inclusos para instalar dependencias de forma global en el sistema, pero eso no entra ahora.</p> <p></p> <p>Tras instalar la dependencia faltante y volver a usar <code>npm start</code> ahora si se habr\u00e1 puesto en escucha con \u00e9xito el servicio, por lo que ya podemos acceder a este por medio del navegador.</p> <p></p> <p></p>"},{"location":"DAWEB/Tema%203/practica3-2/#despliegue-en-netlify","title":"Despliegue en Netlify","text":""},{"location":"DAWEB/Tema%203/practica3-2/#prerrequisitos","title":"Prerrequisitos","text":"<p>Para poder desplegar en este SaaS, debemos de tener una cuenta en la plataforma. Puedes iniciar sesi\u00f3n con tu cuenta de Github si deseas.</p>"},{"location":"DAWEB/Tema%203/practica3-2/#despliegue-manual-mediante-cli","title":"Despliegue manual mediante CLI","text":"<p>Para hacer el despliegue manual desde tu equipo de desarrollo necesitamos dos cosas:</p> <ul> <li>Un token para autorizar el despliegue e indicar que somos nosotros el que despliega.</li> <li>Netlify CLI, la utilidad de consola que permite hacer los despliegues de forma sencilla a los desarrolladores.</li> </ul>"},{"location":"DAWEB/Tema%203/practica3-2/#obtencion-del-token","title":"Obtenci\u00f3n del token","text":"<p>Para crear un token nos tenemos que dirigir a los ajustes de usuario de Netlify y una vez dentro en el apartado de <code>Applications</code>,  tendremos que hacer click sobre <code>New Access</code> y as\u00ed nos mandar\u00e1 a la p\u00e1gina de creaci\u00f3n del token, le ponemos un nombre, indicamos la fecha de expiraci\u00f3n y lo generamos.</p> <p></p> <p>Ahora para que el CLI pueda iniciar sesi\u00f3n con el token creado debemos de guardarlo en una variable de entorno, para ello copiamos el token y en caso de Debian 12, accedemos a <code>$HOME/.bashrc</code> y aqu\u00ed dentro al final tendremos que a\u00f1adir la variable <code>NETLIFY_AUTH_TOKEN</code> usando la palabra clave <code>export</code> para que esta variable la puedan usar otros procesos del sistema.</p> <p></p> <p>Una vez hecho esto debemos de hacer que detecten la nueva variable de entorno, esto se puede hacer saliendo y entrando al SSH de nuevo, o m\u00e1s c\u00f3modo, con el comando source, que vuelva a leer el archivo <code>.bashrc</code> y cargue la nueva variable de entorno en el sistema. <pre><code>source ~/.bashrc\n</code></pre></p>"},{"location":"DAWEB/Tema%203/practica3-2/#instalacion-de-netlify-cli","title":"Instalaci\u00f3n de Netlify CLI","text":"<p>Para instalar el CLI de Netlify en vez de usar APT usaremos npm ya que como dije anteriormente, permite instalar aplicaciones a nivel global adem\u00e1s del \u00e1mbito de proyecto, por lo que se usar\u00e1 el comando que se ve en la captura que incluye el par\u00e1metro <code>-g</code>. </p> <p></p> <p>Una vez instalado usamos el comando <code>netlify login</code> para que inicie sesi\u00f3n con el token almacenado en la variable de entorno.</p> <p></p>"},{"location":"DAWEB/Tema%203/practica3-2/#despliegue-manual","title":"Despliegue manual","text":"<p>Para hacer la prueba vamos a clonar una aplicaci\u00f3n web de React que hace variaciones de un color</p> <p></p> <p>Normalmente al desarrollar una aplicaci\u00f3n web, actualmente necesita de un proceso de empaquetado o transpilaci\u00f3n, o minificaci\u00f3n antes de ponerla en producci\u00f3n, en este caso \u00fanicamente necesitamos contruir  la aplicaci\u00f3n y ponerla a funcionar, para ello usaremos el comando <code>npm run build</code> que fue configurado previamente en el <code>package.json</code> por el desarrollador. Antes obviamente debemos de instalar las dependencias del proyecto.</p> <p></p> <p>Una vez hecho esto y comprobado que se ha construido correctamente la app, ya podremos hacer el deploy en Netlify. Para esto simplemente debemos de ejecutar el comando de <code>netlify deploy</code> y contestar las siguientes preguntas que nos har\u00e1n:</p> <ol> <li>Elegir si queremos hacer deploy en un sitio ya existente o crear uno nuevo, en nuestro caso creamos uno nuevo.</li> <li>Nombre del team al que va a pertenecer el sitio</li> <li>Nombre del sitio donde se har\u00e1 el deploy</li> <li>Directorio que contiene la aplicaci\u00f3n construida</li> </ol> <p></p> <p>Una vez se ha completado el despliegue en modo de pruebas y todo ha salido bien tal y como se muestra en la captura, debemos de  desplegarla en producci\u00f3n, esto se hace con el mismo comando pero a\u00f1adiendo el par\u00e1metro de <code>prod</code>, quedando de la siguiente forma: <pre><code>netlify deploy --prod\n</code></pre></p> <p></p> <p>Una vez hecho esto, nos mostrar\u00e1 al final la URL del sitio desplegado y es la que tenemos que pasar a nuestros usuarios ya que es la que  hace falta para conectarla.</p> <p></p>"},{"location":"DAWEB/Tema%203/practica3-2/#despliegue-automatico-mediante-repositorio","title":"Despliegue autom\u00e1tico mediante repositorio","text":""},{"location":"DAWEB/Tema%203/practica3-2/#borrado-del-anterior-despliegue","title":"Borrado del anterior despliegue","text":"<p>Para realizar el despliegue autom\u00e1tico vamos a borrar la otra aplicaci\u00f3n ya que solo nos servia para mostrar el ejemplo anterior, para  ellos nos dirigimos al Dashboard y buscamos el sitio creado, clickamos sobre el y en la configuraci\u00f3n del sitio bajamos hasta encontrar el bot\u00f3n de <code>Delete this site</code>, clickamos sobre este.</p> <p></p> <p>Tras esto para confirmar la eliminaci\u00f3n escribimos el nombre del sitio y clickamos sobre <code>Delete</code>.</p> <p></p>"},{"location":"DAWEB/Tema%203/practica3-2/#crear-repositorio-en-github-con-la-app","title":"Crear repositorio en Github con la app","text":"<p>Para desplegar la aplicaci\u00f3n, descargaremos el c\u00f3digo fuente sin repositorio usando el comando: <pre><code>wget https://github.com/StackAbuse/color-shades-generator/archive/refs/heads/main.zip\n</code></pre></p> <p></p> <p>Extraemos el zip en la carpeta que mejor nos venga</p> <p></p> <p>Ahora para crear el repositorio local simplemente debemos de usar el comango <code>git init</code> para que cree todo lo necesario para el control de versiones. Tras esto debemos de a\u00f1adir todos los archivos al primer commit, esto se har\u00e1 con <code>git add .</code> y con <code>git commit -m \"mensaje commit\"</code> creamos el commit.</p> <p></p> <p>Ahora para subir los archivos al repositorio remoto, debemos de a\u00f1adir este usando el comando <code>git remote add &lt;nombre_origen&gt; &lt;url_repo&gt;</code>. Algo a tener en cuenta es que el nombre del origen puede ser el que quieras, pero generalmente se suele usar <code>origin</code>.</p> <p></p> <p>Ahora solo queda subir los cambios al repositorio remoto, este ya fue creado anteriormente en github en mi cuenta, por lo que tu tendr\u00e1s que crear otro. </p> <p></p>"},{"location":"DAWEB/Tema%203/practica3-2/#crear-sitio-a-partir-de-un-repo-de-github","title":"Crear sitio a partir de un repo de Github","text":"<p>Para hacer deploy desde el repositorio debemos de ir al listado de sitios y buscar el bot\u00f3n de <code>Import from Git</code> para despu\u00e9s hacer click en \u00e9l.</p> <p></p> <p>Ahora nos preguntar\u00e1n que proveedor de servicio de repositorio remoto queremos usar para obtener la aplicaci\u00f3n a desplegar, en nuestro caso usaremos Github.</p> <p></p> <p>Tras elegir Github nos crear\u00e1 una ventana emergente donde nos preguntar\u00e1 donde queremos instalar la aplicacion de Netlify, en nuestro caso elegiremos nuestra cuenta personal en vez de alguna organizaci\u00f3n ya existente.</p> <p></p> <p>Ahora tenemos que elegir a que repositorios tendr\u00e1 acceso Netlify, por cuestiones de privacidad, solo voy a darle acceso al repositorio que cre\u00e9 exclusivamente para la pr\u00e1ctica, una vez elegido le damos al bot\u00f3n de <code>Install</code> y nos mostrar\u00e1 un mensaje una vez termine de que ya podemos cerrar la ventana.</p> <p></p> <p>Ahora ya podremos elegirlo dentro del panel de Netlify, por lo que lo elegimos.</p> <p></p> <p>Ahora para configurar el sitio simplemente para este despliegue sencillo debemos de indicar los siguientes datos:</p> <ol> <li>El equipo de Netlify del sitio.</li> <li>El nombre del sitio.</li> <li>La rama que va a desplegar</li> <li>El comando de construcci\u00f3n</li> <li>El directorio de la aplicaci\u00f3n construida.</li> </ol> <p>Ahora le damos al bot\u00f3n de <code>Desplegar</code></p> <p></p> <p>Una vez hemos presionado sobre ese bot\u00f3n en los sitios nos mostrar\u00e1 algo parecido a la siguiente captura, indic\u00e1ndonos que se est\u00e1 desplegando que si el proyecto es ligero, con darle unos minutos ya se pondr\u00e1 como en la \u00faltima captura de pantalla y ya podremos acceder mediante la URL que nos proporciona Netlify.</p> <p></p> <p></p>"},{"location":"DAWEB/Tema%203/practica3-3/","title":"Pr\u00e1ctica 3.3: Despliegue de una aplicaci\u00f3n Flask (Python)","text":"<p>Cuidao</p> <p>Falta documentar</p>"},{"location":"DAWEB/Tema%203/practica3-3/#inicializacion-y-despliegue-basico-de-aplicacion","title":"Inicializaci\u00f3n y despliegue b\u00e1sico de aplicaci\u00f3n","text":""},{"location":"DAWEB/Tema%203/practica3-3/#instalacion-de-pipenv","title":"Instalaci\u00f3n de pipenv","text":""},{"location":"DAWEB/Tema%203/practica3-3/#inicializacion-de-aplicacion","title":"Inicializaci\u00f3n de aplicaci\u00f3n","text":""},{"location":"DAWEB/Tema%203/practica3-3/#creacion-de-archivo-de-wsgi","title":"Creaci\u00f3n de archivo de wsgi","text":""},{"location":"DAWEB/Tema%203/practica3-3/#prueba-de-funcionamiento","title":"Prueba de funcionamiento","text":""},{"location":"DAWEB/Tema%203/practica3-3/#servicio-gunicorn-con-systemd","title":"Servicio Gunicorn con Systemd","text":""},{"location":"DAWEB/Tema%203/practica3-3/#prueba-de-funcionamiento-de-gunicorn","title":"Prueba de funcionamiento de Gunicorn","text":""},{"location":"DAWEB/Tema%203/practica3-3/#obtencion-de-ruta-del-ejecutable-de-gunicorn","title":"Obtenci\u00f3n de ruta del ejecutable de gunicorn","text":""},{"location":"DAWEB/Tema%203/practica3-3/#creacion-de-servicio-systemd","title":"Creaci\u00f3n de servicio Systemd","text":""},{"location":"DAWEB/Tema%203/practica3-3/#creacion-host-en-nginx","title":"Creaci\u00f3n host en Nginx","text":""},{"location":"DAWEB/Tema%203/practica3-3/#cuestiones","title":"Cuestiones","text":"<p>Cuesti\u00f3n 1</p> <p>Busca, lee, entiende y explica qu\u00e9 es y para que sirve un servidor WSGI</p> <p>Un servidor WSGI es un intermediario entre el servidor web y el servidor de aplicaciones. Es un est\u00e1ndar que permite facilitar el unir un servidor web a uno o varios de aplicaciones destinado a Python. Las peticiones que le llegan al servidor web este las pasa al servidor WSGI y el servidor WSGI las pasa a la aplicaci\u00f3n correspondiente, o la instancia de esta ya que si lo permite  puedes tener varias instancias de una misma aplicaci\u00f3n funcionando, actuando de balanceador de carga, como Gunicorn</p>"},{"location":"DAWEB/Tema%204/practica4-1/","title":"Pr\u00e1ctica 4.1: Configuraci\u00f3n de un servidor DNS","text":"<p>Sobre las IPs</p> <p>En la pr\u00e1ctica puede verse en las capturas que cambia la direcci\u00f3n de red a partir de cierto punto. Esto es debido a que en clase no tiene la misma direcci\u00f3n de red que la de mi casa.</p>"},{"location":"DAWEB/Tema%204/practica4-1/#introduccion","title":"Introducci\u00f3n","text":"<p>En esta pr\u00e1ctica se va a realizar la instalaci\u00f3n y configuraci\u00f3n del servidor de nombres Bind9. </p> <p>Este tipo de servidores se encargan de resolver los nombres de host  de las URL y es un paso intermedio que aunque invisible al usuario hace una labor importante ya que permite tener direcciones URL con nombres m\u00e1s f\u00e1ciles de recordar que la direcci\u00f3n a la m\u00e1quina. </p> <p>Para que entendamos un poco el funcionamiento de este servidor podemos asemejarlo a un \u00edndice de un libro, en el que tienes el nombre del cap\u00edtulo y en la p\u00e1gina en la que se encuentra para que el lector pueda saber a qu\u00e9 pagina dirigirse, pues ese es el funcionamiento a groso modo de este tipo de servidor.</p>"},{"location":"DAWEB/Tema%204/practica4-1/#instalacion-de-bind9","title":"Instalaci\u00f3n de Bind9","text":"<p>Para instalar Bind9 en Debian 12, usaremos el gestor de paquetes del sistema ya  que este lo proporciona, por lo que el comando a usar es:</p> <p><pre><code>sudo apt-get install bind9 bind9utils bind9-doc\n</code></pre> </p> <p>Puesto que para la pr\u00e1ctica y para el servidor de pruebas, la IPV6 no nos va a hacer ninguna falta, podemos deshabilitarla cambiando los par\u00e1metros de inicio que tendr\u00e1 el servicio <code>named</code>, que es el nombre que recibe el servidor Bind9.</p> <p>Nos dirigiremos al archivo <code>/etc/default/named</code> y en la variable <code>OPTIONS</code> tendremos que a\u00f1adir el par\u00e1metro <code>-4</code> al final, tal y como se muestra en la captura.</p> <p></p>"},{"location":"DAWEB/Tema%204/practica4-1/#archivo-de-agrupacion-de-configuracion","title":"Archivo de agrupaci\u00f3n de configuraci\u00f3n","text":"<p>Este archivo se encarga de agrupar los tres archivos de configuraci\u00f3n principales del servidor Bind9, este generalmente no hay que tocarlo para nada ya que solo se encarga de incluir los diferentes archivos de configuraci\u00f3n los cuales son: </p> <ul> <li><code>named.conf.options</code>: Archivo donde se agrupan las opciones generales del servidor Bind9.</li> <li><code>named.conf.local</code>: Archivo donde se definen las zonas del servidor Bind9.</li> <li><code>named.conf.default-zones</code>: Este archivo contiene las zonas por defecto del servidor Bind9. Estas zonas son las del localhost, y la de broadcast, este no lo tocaremos en esta pr\u00e1ctica.</li> </ul> <p></p>"},{"location":"DAWEB/Tema%204/practica4-1/#configuracion-general","title":"Configuraci\u00f3n general","text":"<p>Antes de definir las zonas, tendremos que realizar ciertas modificaciones en el archivo de configuraci\u00f3n general.</p>"},{"location":"DAWEB/Tema%204/practica4-1/#copia-de-seguridad","title":"Copia de seguridad","text":"<p>Cuando se modifican archivos de configuraci\u00f3n generalmente se recomienda guardar una copia de seguridad de la \u00faltima configuraci\u00f3n que funciona por si tenemos que volver para atr\u00e1s, esto se logra ejecutando el siguiente comando: <pre><code>sudo cp /etc/bind/named.conf.options /etc/bind/named.conf.options.backup\n</code></pre></p>"},{"location":"DAWEB/Tema%204/practica4-1/#lista-blanca-de-peticiones","title":"Lista blanca de peticiones","text":"<p>Para esta pr\u00e1ctica vamos a a\u00f1adir una lista blanca de las redes que pueden preguntar al servidor de nombres, esto se logra mediante el bloque <code>acl</code> en el que deberemos de a\u00f1adir la direcci\u00f3n de red de las redes permitidas junto a su m\u00e1scara de red abreviada. El formato del bloque es: <pre><code>acl \"&lt;nombreAcl&gt;\" {\n    &lt;byte&gt;.&lt;byte&gt;.&lt;byte&gt;.&lt;byte&gt;/&lt;mascara&gt;;\n    //...\n};\n</code></pre> </p> <p>Direcciones de red</p> <p>Las direcciones de red se obtiene poniendo los bits de host a 0. </p> <p>Es decir que para la ip <code>192.168.115.43/24</code> la ip de red ser\u00eda <code>192.168.115.0/24</code> ya que el \u00faltimo octeto corresponde a los bits de hosts.</p>"},{"location":"DAWEB/Tema%204/practica4-1/#configuracion-del-servidor","title":"Configuraci\u00f3n del servidor","text":"<p>La configuraci\u00f3n que vamos a hacer extra es la siguiente: </p> <ul> <li>Primero desactivamos que escuche peticiones con IPV6, aunque ya se desactiv\u00f3 anteriormente tambi\u00e9n debemos de hacerlo aqu\u00ed.</li> <li>Indicamos que solo las redes de la lista blanca pueden hacer consultas recursivas a otros DNS para resolver el nombre. Ojo que aqu\u00ed no las permitimos a\u00fan, solo indicamos quienes pueden hacerlas</li> <li>Indicamos que ning\u00fan equipo que haga una petici\u00f3n a nuestra DNS pueda ser transferido a otra zona de la que accede primeramente.</li> <li>Indicamos que el servidor Bind9 escucha en el puerto e ip indicado.</li> <li>Permitimos las consultas recursivas en Bind9</li> </ul> <p></p>"},{"location":"DAWEB/Tema%204/practica4-1/#creacion-de-las-zonas-dns","title":"Creaci\u00f3n de las zonas DNS","text":"<p>Ahora vamos a definir las zonas directas e inversas para resolver el nombre de dominio que se a\u00f1ada a este.</p> <p>Tenemos la zona directa que resuelve de nombre a IP y la zona inversa que resuelve de IP a nombre.</p> <p>Para ir al grano en las configuraciones vamos a explicar los registros necesarios para definir una zona:</p> <ul> <li> <p>Registro <code>SOA</code>(Start Of Authority): Se encarga de almacenar informaci\u00f3n sobre la zona DNS, tales como la direcci\u00f3n de     administrador de la zona, el tiempo de espera entre actualizaciones, etc. Este registro es obligatorio para cumplir con     las normas IETF y para realizar transferencias de zonas correctamente, aunque en esta pr\u00e1ctica las deshabilitemos.</p> <p>Este registro sigue el siguiente formato <code>@ IN SOA &lt;servidor de nombres&gt; &lt;direccion del administrador&gt; (...)</code> en donde los puntos suspensivos se indican mediante espacios o saltos de l\u00ednea la configuraci\u00f3n de la zona DNS, el orden es  importante ya que equivale a los siguiente:</p> <ul> <li>N\u00famero serial: N\u00famero que cuando cambia, indica a los servidores DNS secundarios que deben actualizar su copia del archivo de la zona DNS espec\u00edfica.</li> <li>Refresco (REFRESH): El tiempo de espera (en segundos) que los servidores DNS secundarios pidan el registro SOA a la zona para comprobar si se ha actualizado.</li> <li>Reintento (RETRY): El tiempo de espera (en segundos) que los servidores DNS secundarios tienen que esperar para pedir el registro SOA en caso de que no responda el servidor de la zona.</li> <li>Expiraci\u00f3n (EXPIRE): Tiempo de espera (en segundos) en el que el servidor secundario si no recibe respuesta, no responder\u00e1 a las peticiones de la zona.</li> <li>TTL: Tiempo (en segundos) en el que los servidores tendr\u00e1n que cachear los registros.</li> </ul> </li> <li> <p>Registro <code>NS</code>(Names Server): Este es m\u00e1s sencillo que el anterior, este indica que servidor contiene los registros DNS     de la zona y nunca deberan de apuntar a un registro <code>CNAME</code>. La sint\u00e1xis es <code>@ IN NS &lt;servidor dns&gt;</code>.</p> </li> </ul> <p>Una vez explicado esto ya podemos continuar con la pr\u00e1ctica, adelantando que estos dos registros siempre deberan de incluirse al principio de cada zona.</p>"},{"location":"DAWEB/Tema%204/practica4-1/#zona-dns-principal","title":"Zona DNS principal","text":""},{"location":"DAWEB/Tema%204/practica4-1/#definicion-de-la-zona","title":"Definici\u00f3n de la zona","text":"<p>Para definir las zonas nos dirigimos al archivo <code>named.conf.local</code>, y en dicho archivo debemos de usar el bloque <code>zone{...};</code> para definir las diferentes zonas. La sint\u00e1xis es la siguiente: <pre><code>zone \"&lt;nombre zona&gt;\" {\n    type master;\n    file \"&lt;ruta_archivo_zona&gt;\";\n}\n</code></pre></p> <p></p>"},{"location":"DAWEB/Tema%204/practica4-1/#archivo-de-la-zona","title":"Archivo de la zona","text":"<p>A\u00f1adimos los correspondientes registros <code>SOA</code>, <code>NS</code> y un nuevo registro de tipo <code>A</code>. Este indica que el subdominio <code>debian</code> har\u00e1 referencia a la IP que le indiquemos, siendo su sint\u00e1xis de la siguiente manera: <code>&lt;subdominio&gt; IN A &lt;ip</code>&gt;`. </p>"},{"location":"DAWEB/Tema%204/practica4-1/#zona-dns-inversa","title":"Zona DNS inversa","text":""},{"location":"DAWEB/Tema%204/practica4-1/#definicion-de-la-zona-inversa","title":"Definici\u00f3n de la zona inversa","text":"<p>Para definir la zona inversa debemos de usar una sint\u00e1xis especial para indicar al servidor DNS que esa zona ser\u00e1 para resolver inversamente de IP a nombre de dominio. </p> <p>El nombre de la zona es <code>&lt;direccion de red sin los octetos de host&gt;.in-addr.arpa</code>. Por lo dem\u00e1s es igual a crear una zona normal.</p> <p></p>"},{"location":"DAWEB/Tema%204/practica4-1/#archivo-de-la-zona-inversa","title":"Archivo de la zona inversa","text":"<p>A\u00f1adimos los correspondientes registros <code>SOA</code>, <code>NS</code> y un nuevo registro de tipo <code>PTR</code>.</p> <p>Este tipo de registro es el contrario al tipo <code>A</code>, es decir vincula una IP con un nombre. Bien esta IP que se a\u00f1ade al registro va invertida, es decir que si la IP es <code>192.168.18.14</code>, en el registro va <code>14.18.168.192</code>. Y gracias que la zona se llama <code>18.168.192.in-addr.arpa (en mi caso)</code> esto permite que en el registro en vez de colocar todo el n\u00famero solo coloquemos la parte de host, es decir <code>14</code>.</p> <p></p>"},{"location":"DAWEB/Tema%204/practica4-1/#comprobacion-del-funcionamiento-del-dns","title":"Comprobaci\u00f3n del funcionamiento del DNS","text":""},{"location":"DAWEB/Tema%204/practica4-1/#comprobamos-configuracion","title":"Comprobamos configuraci\u00f3n","text":"<p>Para comprobar que todo funciona correctamente tenemos que ejecutar los dos siguientes comandos, fij\u00e1ndonos si en las salidas de estos nos devuelven un OK. En caso contrario nos indicar\u00e1 que tenemos mal aunque a veces puede ser un poco confuso el mensaje.</p> <p><pre><code># Comprobar la zona directa\nsudo named-checkconf &lt;archivo de la zona&gt; &lt;archivo de la zona inversa&gt;\n# Comprobar la zona inversa\nsudo named-checkconf &lt;archivo de la zona inversa&gt; &lt;archivo de la zona&gt;\n</code></pre> </p> <p>Una vez tenemos <code>OK</code> en las dos zonas, podemos reiniciar el servicio de Bind9 para aplicar los cambios, esto se hace con el siguiente comando: <pre><code>sudo systemctl restart named\n</code></pre></p> <p>En caso de que queramos comprobar si todo ha sido cargado correctamente, usamos el siguiente: <pre><code>sudo systemctl status named\n</code></pre></p> <p></p>"},{"location":"DAWEB/Tema%204/practica4-1/#comprobamos-las-resoluciones-de-nombre-con-dig","title":"Comprobamos las resoluciones de nombre con dig","text":"<p>Para comprobar que todo funciona correctamente primeramente debemos de configurar nuestro sistema para a\u00f1adir el servidor DNS para que pregunte a este adem\u00e1s del por defecto, en mi caso con Ubuntu ser\u00eda en la configuraci\u00f3n de  la red conectada.</p> <p></p> <p>Sobre la configuraci\u00f3n del adaptador</p> <p>Para realizar la prueba, lo normal es a\u00f1adir el DNS por defecto y antes de este el DNS que hemos configurado pero me ha ocurrido que no hab\u00eda forma de que redigiera la consulta a mi DNS a no ser que lo pusiera solo, por lo  que por ello est\u00e1 solo. La configuraci\u00f3n correcta ser\u00eda: <code>192.168.18.14,192.168.18.1</code>.</p> <p>Ahora para ver si nos resuelve correctamente el nombre, debemos de usar el comando: <pre><code>dig &lt;subdominio o dominio&gt;\n</code></pre></p> <p>Y nos tiene que devolver que en el partado de <code>QUESTION</code> pedimos el registro de tipo <code>A</code> con esa ip para que despu\u00e9s en el apartado <code>ANSWER</code> nos indique la misma cabecera pero con la IP del registro. Tal y como se ve en la captura.</p> <p></p> <p>Ahora para ver si nos resuelve correctamente el nombre, debemos de usar el comando: <pre><code>dig -x &lt;ip&gt;\n</code></pre></p> <p>Y nos tiene que devolver que en el partado de <code>QUESTION</code> pedimos el registro de tipo <code>OTR</code> con esa ip para que despu\u00e9s en el apartado <code>ANSWER</code> nos indique la misma cabecera pero con el nombre al que apunta el registro. Tal y como se ve en la captura.</p> <p></p>"},{"location":"DAWEB/Tema%204/practica4-1/#tarea","title":"Tarea","text":"<p>Configura el DNS para que resuelva el nombre de vuestro sitio web de la pr\u00e1ctica 3.5 y de la 3.2.</p> <p>Recuerda que con nuestra configuraci\u00f3n actual, para acceder a los sitios web necesitaremos a\u00f1adir el dominio deaw.es en el nombre.</p>"},{"location":"DAWEB/Tema%204/practica4-1/#anadir-los-registros-dns","title":"A\u00f1adir los registros DNS","text":"/etc/bind/db.anesdeaw.es<pre><code>$TTL 604800\n@               IN  SOA debian.anes-deaw.es. admin.anes-deaw.es. (\n                    ;[A\u00f1oMesDiaVersion]\n                    2025011401 ;Serial\n                    3600 ;Refresh\n                    1800 ;Retry\n                    604800 ;Expire\n                    86400) ; Minimum TTL\n                IN  NS  debian.anes-deaw.es.\n;\ndebian          IN  A   192.168.18.14\npratresdos      IN  CNAME manusiro-practica32.netlify.app\npradoscinco    IN  A 192.168.18.16\n</code></pre>"},{"location":"DAWEB/Tema%204/practica4-1/#cuestiones","title":"Cuestiones","text":"<p>Cuesti\u00f3n 1</p> <p>\u00bfQu\u00e9 pasar\u00e1 si un cliente de una red diferente a la tuya intenta hacer uso de tu DNS de alguna manera, le funcionar\u00e1?\u00bfPor qu\u00e9, en qu\u00e9 parte de la configuraci\u00f3n puede verse?</p> <p>El servidor intentar\u00e1 resolver su consulta pero solo la resolver\u00e1 si el registro que busca est\u00e1 en el mismo servidor DNS. En caso de tener que reenviar la consulta a un servidor DNS, esto lo har\u00e1 \u00fanicamente si est\u00e1 dentro de la lista blanca indicada anteriormente.</p> <p>Cuesti\u00f3n 2</p> <p>\u00bfPor qu\u00e9 tenemos que permitir las consultas recursivas en la configuraci\u00f3n?</p> <p>Debemos permitirlas ya que as\u00ed en caso de que no encuentre el registro que busca en el servidor actual, este podr\u00e1 delegar esta consulta a otros servidores de nombres indicados en el registro de DNS.</p> <p>Cuesti\u00f3n 3</p> <p>El servidor DNS que acab\u00e1is de montar, \u00bfes autoritativo? \u00bfPor qu\u00e9?</p> <p>El servidor DNS que hemos montado se puede considerar autoritativo debido a que ser\u00eda el \u00faltimo paso en la consulta de resoluci\u00f3n de nombres para obtener a donde apunta el recurso que buscamos. </p> <p>Siguiendo el esquema de la cuesti\u00f3n 9, ser\u00eda el \"anescdev.es DNS\".</p> <p>Cuesti\u00f3n 4</p> <p>\u00bfD\u00f3nde podemos encontrar la directiva $ORIGIN y para qu\u00e9 sirve?</p> <p>En los archivos de zona podemos encontrar <code>$ORIGIN &lt;subdominio-dominio&gt;</code> y sirve para que en los registros que est\u00e9n debajo de esta directiva se le a\u00f1ada al final el valor de origin siempre y cuando el registro no termine en . Es decir en <pre><code>$ORIGIN deaw.es\ndebian. IN A 223.234.23.43\ndebian IN A 223.234.23.43\n</code></pre> En la zona, solo al segundo registro se a\u00f1adir\u00eda al final <code>deaw.es</code>.</p> <p>Cuesti\u00f3n 5</p> <p>\u00bfUna zona es id\u00e9ntico a un dominio? </p> <p>No ya que un dominio es al final un nombre, y detr\u00e1s de este se encuentra la zona DNS.</p> <p>Cuesti\u00f3n 6</p> <p>\u00bfPueden editarse los archivos de zona de un servidor esclavo/secundario?</p> <p>No pueden ya que estos se actualizan mediante transferencia de zona de sus servidores maestros.</p> <p>Cuesti\u00f3n 7</p> <p>\u00bfPor qu\u00e9 podr\u00eda querer tener m\u00e1s de un servidor esclavo para una misma zona?</p> <p>Por ejemplo para tener siempre disponibilidad del servidor DNS en caso de que se caiga por diversos motivos, como un ataque DDOS, o un problema en la infraestructura. </p> <p>Cuesti\u00f3n 8</p> <p>\u00bfCu\u00e1ntos servidores ra\u00edz existen?</p> <p>Ciertamente existen bastantes servidores ra\u00edz, pero contando los principales que m\u00e1s se usan hacen un total de 13.</p> <p>Cuesti\u00f3n 9</p> <p>\u00bfQu\u00e9 es una consulta iterativa de referencia?</p> <p>Es una consulta que para no entrar en mucho detalle va por bloques y cada bloque tiene un servidor DNS que la resuelve, vayamos por partes. </p> <ol> <li>Primeramente tenemos el servidor DNS que agrupa todos los servidores ra\u00edz, que reenv\u00eda al servidor DNS correspondiente la consulta, </li> <li>Despu\u00e9s este vuelve a reenviar la petici\u00f3n al siguiente DNS y as\u00ed sucesivamente hasta que uno  de la respuesta definitiva. </li> </ol> <p>Gr\u00e1ficamente sigue el siguiente esquema: </p> <p>Para no cargar mucho el esquema quiero matizar que donde dice \"DNS donde buscar de nuevo\", en realidad es una respuesta DNS parcial, la cual va formando la respuesta definitiva.</p> <p>Cuesti\u00f3n 10</p> <p>En una resoluci\u00f3n inversa, \u00bfa qu\u00e9 nombre se mapear\u00eda la direcci\u00f3n IP 172.16.34.56?</p> <p>Al que le indiquemos en el registro <code>PTR</code> de la zona DNS inversa.</p>"},{"location":"DAWEB/Tema%205/practica5-1/","title":"Pr\u00e1ctica 5.1: Ejercicios de Git","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ejercicios-i","title":"Ejercicios (I)","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-1","title":"Ejercicio 1","text":""},{"location":"DAWEB/Tema%205/practica5-1/#creacion-del-repositorio","title":"Creaci\u00f3n del repositorio","text":""},{"location":"DAWEB/Tema%205/practica5-1/#readme","title":"Readme","text":""},{"location":"DAWEB/Tema%205/practica5-1/#commit-inicial","title":"Commit inicial","text":""},{"location":"DAWEB/Tema%205/practica5-1/#push-inicial","title":"Push inicial","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ignorar-archivos","title":"Ignorar archivos","text":""},{"location":"DAWEB/Tema%205/practica5-1/#anadir-fichero-1txt","title":"A\u00f1adir fichero 1.txt","text":""},{"location":"DAWEB/Tema%205/practica5-1/#crear-el-tag-v01","title":"Crear el tag v0.1","text":""},{"location":"DAWEB/Tema%205/practica5-1/#subir-el-tag-v01","title":"Subir el tag v0.1","text":""},{"location":"DAWEB/Tema%205/practica5-1/#cuenta-de-github","title":"Cuenta de GitHub","text":""},{"location":"DAWEB/Tema%205/practica5-1/#poner-una-foto-en-vuestro-perfil-de-github","title":"Poner una foto en vuestro perfil de GitHub.","text":""},{"location":"DAWEB/Tema%205/practica5-1/#poner-el-doble-factor-de-autentificacion-en-vuestra-cuenta-de-github","title":"Poner el doble factor de autentificaci\u00f3n en vuestra cuenta de GitHub.","text":""},{"location":"DAWEB/Tema%205/practica5-1/#uso-social-de-github","title":"Uso social de GitHub","text":""},{"location":"DAWEB/Tema%205/practica5-1/#preguntar-los-nombres-de-usuario-de-github-de-2-de-tus-companeros-de-clase-buscalos-y-sigueles","title":"Preguntar los nombres de usuario de GitHub de 2 de tus compa\u00f1eros de clase, b\u00fascalos, y sigueles.","text":""},{"location":"DAWEB/Tema%205/practica5-1/#seguir-los-repositorios-deaw-del-resto-de-tus-companeros","title":"Seguir los repositorios DEAW del resto de tus compa\u00f1eros.","text":""},{"location":"DAWEB/Tema%205/practica5-1/#anadir-una-estrella-a-los-repositorios-deaw-del-resto-de-tus-companeros","title":"A\u00f1adir una estrella a los repositorios DEAW del resto de tus compa\u00f1eros.","text":""},{"location":"DAWEB/Tema%205/practica5-1/#crear-una-tabla","title":"Crear una tabla","text":""},{"location":"DAWEB/Tema%205/practica5-1/#colaboradores","title":"Colaboradores","text":"<p>A\u00f1adir a https://github.com/dlopezmfp como colaborador</p> <p></p> <p></p> <p></p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-2","title":"Ejercicio 2","text":""},{"location":"DAWEB/Tema%205/practica5-1/#crear-una-rama-v02","title":"Crear una rama v0.2","text":""},{"location":"DAWEB/Tema%205/practica5-1/#anadir-fichero-2txt","title":"A\u00f1adir fichero 2.txt","text":""},{"location":"DAWEB/Tema%205/practica5-1/#crear-rama-remota-v02","title":"Crear rama remota v0.2","text":""},{"location":"DAWEB/Tema%205/practica5-1/#merge-directo","title":"Merge directo","text":""},{"location":"DAWEB/Tema%205/practica5-1/#parte-1","title":"Parte 1","text":""},{"location":"DAWEB/Tema%205/practica5-1/#parte-2","title":"Parte 2","text":""},{"location":"DAWEB/Tema%205/practica5-1/#merge-con-conflicto","title":"Merge con conflicto","text":""},{"location":"DAWEB/Tema%205/practica5-1/#parte-1_1","title":"Parte 1","text":"<p>En la rama master poner Hola en el fichero 1.txt y hacer commit </p>"},{"location":"DAWEB/Tema%205/practica5-1/#parte-2_1","title":"Parte 2","text":"<p>Posicionarse en la rama v0.2 y poner Adios en el fichero \"1.txt\" y hacer commit. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#parte-3","title":"Parte 3","text":"<p>Posicionarse de nuevo en la rama master y hacer un merge con la rama v0.2 </p>"},{"location":"DAWEB/Tema%205/practica5-1/#listado-de-ramas","title":"Listado de ramas","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ramas-con-merge","title":"Ramas con merge","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ramas-sin-merge","title":"Ramas sin merge","text":""},{"location":"DAWEB/Tema%205/practica5-1/#arreglar-conflicto","title":"Arreglar conflicto","text":"<pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\nHola\n============\nAdios\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n</code></pre>"},{"location":"DAWEB/Tema%205/practica5-1/#borrar-rama","title":"Borrar rama","text":""},{"location":"DAWEB/Tema%205/practica5-1/#crea-un-tag-v02","title":"Crea un tag v0.2","text":""},{"location":"DAWEB/Tema%205/practica5-1/#borrar-rama-v02","title":"Borrar rama v0.2","text":""},{"location":"DAWEB/Tema%205/practica5-1/#listado-de-cambios","title":"Listado de cambios","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ejercicios-ii","title":"Ejercicios (II)","text":""},{"location":"DAWEB/Tema%205/practica5-1/#creacion-y-actualizacion-de-repostorios","title":"Creaci\u00f3n y actualizaci\u00f3n de repostorios","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-1_1","title":"Ejercicio 1","text":"<p>Configurar Git definiendo el nombre del usuario, el correo electr\u00f3nico y activar el coloreado de la salida. Mostrar la configuraci\u00f3n final.</p> <p></p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-2_1","title":"Ejercicio 2","text":"<p>Crear un repositorio nuevo con el nombre libro y mostrar su contenido. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-3","title":"Ejercicio 3","text":"<p>Comprobar el estado del repositorio. </p> <p>Crear un fichero indice.txt con el siguiente contenido:</p> <p><pre><code>Cap\u00edtulo 1: Introducci\u00f3n a Git\nCap\u00edtulo 2: Flujo de trabajo b\u00e1sico\nCap\u00edtulo 3: Repositorios remotos\n</code></pre> </p> <p>Comprobar de nuevo el estado del repositorio. </p> <p>A\u00f1adir el fichero a la zona de intercambio temporal. </p> <p>Volver a comprobar una vez m\u00e1s el estado del repositorio. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-4","title":"Ejercicio 4","text":"<p>Realizar un commit de los \u00faltimos cambios con el mensaje \u201cA\u00f1adido \u00edndice del libro.\u201d y ver el estado del repositorio. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-5","title":"Ejercicio 5","text":"<p>Cambiar el fichero indice.txt para que contenga lo siguiente: <pre><code>Cap\u00edtulo 1: Introducci\u00f3n a Git\nCap\u00edtulo 2: Flujo de trabajo b\u00e1sico\nCap\u00edtulo 3: Gesti\u00f3n de ramas\nCap\u00edtulo 4: Repositorios remotos\n</code></pre> </p> <p>Mostrar los cambios con respecto a la \u00faltima versi\u00f3n guardada en el repositorio. </p> <p>Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 3 sobre gesti\u00f3n de ramas\u201d. </p> <p>Sobra el comando git diff aqu\u00ed, es para comprobar</p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-6","title":"Ejercicio 6","text":"<p>Mostrar los cambios de la \u00faltima versi\u00f3n del repositorio con respecto a la anterior. </p> <p>Cambiar el mensaje del \u00faltimo commit por \u201cA\u00f1adido cap\u00edtulo 3 sobre gesti\u00f3n de ramas al \u00edndice.\u201d </p> <p>Volver a mostrar los \u00faltimos cambios del repositorio. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#manejo-del-historial-de-cambios","title":"Manejo del historial de cambios","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-1_2","title":"Ejercicio 1","text":"<p>Mostrar el historial de cambios del repositorio. </p> <p>Crear la carpeta capitulos y crear dentro de ella el fichero capitulo1.txt con el siguiente texto.</p> <p><code>Git es un sistema de control de versiones ideado por Linus Torvalds.</code> Git es un sistema de control de versiones ideado por Linus Torvalds.</p> <p></p> <p>A\u00f1adir los cambios a la zona de intercambio temporal. </p> <p>Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 1.\u201d Volver a mostrar el historial de cambios del repositorio. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-2_2","title":"Ejercicio 2","text":"<p>Crear el fichero <code>capitulo2.txt</code> en la carpeta capitulos con el siguiente texto.</p> <p><code>El flujo de trabajo b\u00e1sico con Git consiste en: 1- Hacer cambios en el repositorio. 2- A\u00f1adir los cambios a la zona de intercambio temporal. 3- Hacer un commit de los cambios.</code></p> <p></p> <p>A\u00f1adir los cambios a la zona de intercambio temporal.</p> <p></p> <p>Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 2.\u201d</p> <p></p> <p>Mostrar las diferencias entre la \u00faltima versi\u00f3n y dos versiones anteriores.</p> <p>Para esto buscamos en <code>git log</code> un commit antiguo ya que branch no tenemos y comparamos</p> <p></p> <p></p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-3_1","title":"Ejercicio 3","text":"<p>Crear el fichero capitulo3.txt en la carpeta capitulos con el siguiente texto.</p> <p><code>Git permite la creaci\u00f3n de ramas lo que permite tener distintas versiones del mismo proyecto y trabajar de manera simultanea en ellas.</code></p> <p></p> <p>A\u00f1adir los cambios a la zona de intercambio temporal. </p> <p>Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 3.\u201d </p> <p>Mostrar las diferencias entre la primera y la \u00faltima versi\u00f3n del repositorio. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-4_1","title":"Ejercicio 4","text":"<p>A\u00f1adir al final del fichero <code>indice.txt</code> la siguiente l\u00ednea:</p> <p><code>Cap\u00edtulo 5: Conceptos avanzados</code></p> <p></p> <p>A\u00f1adir los cambios a la zona de intercambio temporal. </p> <p>Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 5 al \u00edndice.\u201d. </p> <p>Mostrar qui\u00e9n ha hecho cambios sobre el fichero <code>indice.txt</code>. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#deshacer-cambios","title":"Deshacer cambios","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-1_3","title":"Ejercicio 1","text":"<p>Eliminar la \u00faltima l\u00ednea del fichero <code>indice.txt</code> y guardarlo. </p> <p>Comprobar el estado del repositorio. </p> <p>Deshacer los cambios realizados en el fichero <code>indice.txt</code> para volver a la versi\u00f3n anterior del fichero. </p> <p>Volver a comprobar el estado del repositorio. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-2_3","title":"Ejercicio 2","text":"<p>Eliminar la \u00faltima l\u00ednea del fichero <code>indice.txt</code> y guardarlo. </p> <p>A\u00f1adir los cambios a la zona de intercambio temporal. </p> <p>Comprobar de nuevo el estado del repositorio. </p> <p>Quitar los cambios de la zona de intercambio temporal, pero mantenerlos en el directorio de trabajo. </p> <p>Comprobar de nuevo el estado del repositorio. </p> <p>Deshacer los cambios realizados en el fichero <code>indice.txt</code> para volver a la versi\u00f3n anterior del fichero. </p> <p>Volver a comprobar el estado del repositorio. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-3_2","title":"Ejercicio 3","text":"<p>Eliminar la \u00faltima l\u00ednea del fichero <code>indice.txt</code> y guardarlo. </p> <p>Eliminar el fichero <code>capitulos/capitulo3.txt</code>. </p> <p>A\u00f1adir un fichero nuevo <code>capitulos/capitulo4.txt</code> vac\u00edo. </p> <p>A\u00f1adir los cambios a la zona de intercambio temporal. </p> <p>Comprobar de nuevo el estado del repositorio. </p> <p>Quitar los cambios de la zona de intercambio temporal, pero mantenerlos en el directorio de trabajo. </p> <p>Comprobar de nuevo el estado del repositorio. </p> <p>Deshacer los cambios realizados para volver a la versi\u00f3n del repositorio. </p> <p>Volver a comprobar el estado del repositorio. </p> <p>Algo a tener en cuenta es que el fichero no lo elimina debido a que es un archivo nuevo, para solucionar esto simplemente usamos el comando <code>git clean</code>, junto a los par\u00e1metros: </p> <ul> <li><code>-f</code>: fuerza el borrado, obligatorio por defecto.</li> <li><code>-d</code>: muestra que archivos va a borrar, recomendado ejecutar el comando antes con -d para comprobar que borrar\u00e1 y despu\u00e9s ejecutarlo sin este para borrar los archivos si nos interesa.</li> </ul> <p></p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-4_2","title":"Ejercicio 4","text":"<p>Eliminar la \u00faltima l\u00ednea del fichero <code>indice.txt</code> y guardarlo. </p> <p>Eliminar el fichero <code>capitulos/capitulo3.txt</code>. </p> <p>A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cBorrado accidental.\u201d </p> <p>Comprobar el historial del repositorio.</p> <p>Se comprueba el historial usando <code>git log</code>. </p> <p>Deshacer el \u00faltimo commit pero mantener los cambios anteriores en el directorio de trabajo y la zona de intercambio temporal.</p> <p>Para esto debemos obtener el hash del cambio que queremos revertir, usando el comando anterior, tras eso lo copiamos y lo pegamos en el argumento del comando <code>git revert</code> El par\u00e1metro <code>-n</code> en el comando <code>git revert</code> permite revertir un commit sin que se haga autom\u00e1ticamente un commit nuevo con los archivos revertidos.</p> <p></p> <p>Comprobar el historial y el estado del repositorio. </p> <p>Volver a hacer el commit con el mismo mensaje de antes. </p> <p>Deshacer el \u00faltimo commit y los cambios anteriores del directorio de trabajo volviendo a la versi\u00f3n anterior del repositorio. </p> <p>Comprobar de nuevo el historial y el estado del repositorio. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#gestion-de-ramas","title":"Gesti\u00f3n de ramas","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-1_4","title":"Ejercicio 1","text":"<p>Crear una nueva rama bibliografia y mostrar las ramas del repositorio. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-2_4","title":"Ejercicio 2","text":"<p>Crear el fichero capitulos/capitulo4.txt y a\u00f1adir el texto siguiente </p> <p><code>En este cap\u00edtulo veremos c\u00f3mo usar GitHub para alojar repositorios en remoto.</code></p> <p>A\u00f1adir los cambios a la zona de intercambio temporal. </p> <p>Hacer un commit con el mensaje \u201cA\u00f1adido cap\u00edtulo 4.\u201d </p> <p>Mostrar la historia del repositorio incluyendo todas las ramas. </p> <p>Bibliograf\u00eda incluye todas las anteriores, como podemos comprobar si ejecutamos <code>git log bibliografia</code> </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-3_3","title":"Ejercicio 3","text":"<p>Cambiar a la rama bibliografia. </p> <p>Crear el fichero bibliografia.txt y a\u00f1adir la siguiente referencia</p> <p><code>Chacon, S. and Straub, B. Pro Git. Apress.</code> </p> <p>A\u00f1adir los cambios a la zona de intercambio temporal. </p> <p>Hacer un commit con el mensaje \u201cA\u00f1adida primera referencia bibliogr\u00e1fica.\u201d </p> <p>Mostrar la historia del repositorio incluyendo todas las ramas. Esto se logra mediante <code>git log --all</code> </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-4_3","title":"Ejercicio 4","text":"<p>Fusionar la rama bibliografia con la rama master. </p> <p></p> <p>Mostrar la historia del repositorio incluyendo todas las ramas. </p> <p>Eliminar la rama bibliografia. </p> <p>Mostrar de nuevo la historia del repositorio incluyendo todas las ramas. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-5_1","title":"Ejercicio 5","text":"<p>Crear la rama <code>bibliografia</code>. </p> <p>Cambiar a la rama <code>bibliografia</code>. </p> <p>Cambiar el fichero <code>bibliografia.txt</code> para que contenga las siguientes referencias:</p> <pre><code>Scott Chacon and Ben Straub. Pro Git. Apress.\nRyan Hodson. Ry\u2019s Git Tutorial. Smashwords (2014)\n</code></pre> <p></p> <p>A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cA\u00f1adida nueva referencia bibliogr\u00e1fica.\u201d </p> <p>Cambiar a la rama master. </p> <p>Cambiar el fichero <code>bibliografia.txt</code> para que contenga las siguientes referencias:</p> <pre><code>Chacon, S. and Straub, B. Pro Git. Apress.\nLoeliger, J. and McCullough, M. Version control with Git. O\u2019Reilly.\n</code></pre> <p></p> <p>A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cA\u00f1adida nueva referencia bibliogr\u00e1fica.\u201d </p> <p>Fusionar la rama bibliografia con la rama master. </p> <p>Resolver el conflicto dejando el fichero <code>bibliografia.txt</code> con las referencias:</p> <pre><code>Chacon, S. and Straub, B. Pro Git. Apress.\nLoeliger, J. and McCullough, M. Version control with Git. O\u2019Reilly.\nHodson, R. Ry\u2019s Git Tutorial. Smashwords (2014)\n</code></pre> <p></p> <p>A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cResuelto conflicto de bibliograf\u00eda.\u201d </p> <p>Mostrar la historia del repositorio incluyendo todas las ramas. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#repositorios-remotos","title":"Repositorios remotos","text":""},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-1_5","title":"Ejercicio 1","text":"<p>Crear un nuevo repositorio p\u00fablico en GitHub con el nombre <code>libro-git</code>. </p> <p>A\u00f1adirlo al repositorio local del libro. </p> <p>Mostrar todos los repositorios remotos configurados. </p>"},{"location":"DAWEB/Tema%205/practica5-1/#ejercicio-2_5","title":"Ejercicio 2","text":"<p>A\u00f1adir los cambios del repositorio local al repositorio remoto de GitHub. </p> <p>Cuando no existe una branch con el mismo nombre en la que estamos en el repositorio local, debemos de incluir el nombre de la branch que tendr\u00e1 al final.</p> <p>Acceder a GitHub y comprobar que se han subido los cambios mostrando el historial de versiones. </p>"},{"location":"DAWEB/Tema%206/practica6-1/","title":"Pr\u00e1ctica 6.1: Dockerizaci\u00f3n del despliegue de una aplicaci\u00f3n con NodeJS","text":""},{"location":"DAWEB/Tema%206/practica6-1/#instalacion-de-docker","title":"Instalaci\u00f3n de Docker","text":"<p>Docker en algunos sistemas no est\u00e1 a\u00f1adido por defecto los paquetes para instalarlo y actualizarlo con el gestor del paquetes, por lo que tenemos dos formas de instalarlo:</p> <ol> <li>Descargando el paquete correspondiente desde la web</li> <li>A\u00f1adiendo los repositorios al sistema</li> </ol> <p>Yo lo har\u00e9 a\u00f1adiendo los repositorios al sistema</p>"},{"location":"DAWEB/Tema%206/practica6-1/#anadir-el-repositorio-de-docker","title":"A\u00f1adir el repositorio de Docker","text":"<p>Para esto podemos ejecutar los siguientes comandos uno a uno o crear un script de shell para ejecutarlo todo m\u00e1s sencillo, eso es lo que har\u00e9 yo ya que son bastantes comandos y teniendo la oportunidad de poder hacerlo todo de una, lo prefiero. El script que he usado es el que viene en la gu\u00eda de instalaci\u00f3n de Docker:</p> <p>add_docker_repo.sh<pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\\n  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> Creamos un fichero con la extensi\u00f3n .sh y pegamos el anterior script dentro de este y lo guardamos con el nombre que querramos. </p> <p>Para ejecutar el script, debemos de darle permisos de ejecuci\u00f3n, para ello usamos el siguiente comando: <pre><code>chmod +x &lt;nombre_fichero&gt;.sh\n</code></pre></p> <p>Una vez hecho esto, ejecutamos como administrador el script ya que contiene comandos que necesitan permisos elevados para realizar ciertas acciones.</p> <p></p>"},{"location":"DAWEB/Tema%206/practica6-1/#instalar-docker","title":"Instalar docker","text":"<p>Para instalar docker usamos el gestor de paquetes del sistema, con los siguientes paquetes necesarios para docker</p> <p><pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> </p> <p>Una vez instalados debemos de hacer un paso extra y es a\u00f1adir al usuario que vaya a usar docker al grupo <code>docker</code> del sistema que se habr\u00e1 creado despu\u00e9s de la instalaci\u00f3n de los paquetes. Esto se debe de hacer porque al intentar ejecutar alg\u00fan comando de docker sin estar dentro del grupo, nos  dar\u00e1 un error de <code>Permission denied</code>.</p> <pre><code>sudo usermod -a -G docker &lt;nombre_usuario&gt;\n</code></pre> <p></p>"},{"location":"DAWEB/Tema%206/practica6-1/#clonacion-de-proyecto-nodejs","title":"Clonaci\u00f3n de proyecto NodeJS","text":"<p>Ahora para hacer el proceso de contenerizaci\u00f3n, usaremos el proyecto de NodeJS que proporciona la pr\u00e1ctica, por lo que usaremos <code>git clone</code> para clonar el repositorio:</p> <p><pre><code>git clone https://github.com/raul-profesor/DAW_practica_6.1_2024.git\n</code></pre> </p>"},{"location":"DAWEB/Tema%206/practica6-1/#creacion-de-la-imagen-de-docker","title":"Creaci\u00f3n de la imagen de docker","text":"<p>Docker para contenerizar las aplicaciones se basan en im\u00e1genes que son un conjunto de instrucciones que seguir\u00e1 docker al momento de crear las imagenes de la aplicaci\u00f3n, dichas instrucciones son indicadas en los archivos <code>Dockerfile</code> y usa una serie de palabras clave, las cuales explicar\u00e9 \u00fanicamente las usadas en el dockerfile de la captura. </p> <p></p> <ul> <li> <p><code>FROM</code>: Esta directiva indica desde que imagen partir\u00e1 la imagen que estamos creando. Esto es debido a que necesitas una imagen de base, que puede ser desde una de un sistema operativo (mas reducido) o una aplicaci\u00f3n que usa a la vez una imagen de un sistema operativo para funcionar. </p> <p>En el caso de la pr\u00e1ctica usamos una imagen de NodeJS 18 que ser\u00e1 usada con el sistema operativo Alpine, uno muy ligero orientado a la seguridad y muy usado en contenedores.</p> </li> <li> <p><code>RUN</code>: Esta directiva permite ejecutar comandos durante la creaci\u00f3n de la imagen para hacer lo que necesitemos, en mi caso, crear una carpeta</p> </li> <li><code>WORKDIR</code>: Esta directiva permite cambiar el directorio de trabajo actual, es equivalente a <code>cd</code> para que lo entendamos mejor. </li> <li><code>COPY</code>: Esta directiva permite copiar ficheros a la imagen, desde el sistema operativo nuestro (en mi caso Ubuntu) al sistema de la imagen docker.</li> <li> <p><code>EXPOSE</code>: Esta directiva permite exponer un puerto para indicar a los contenedores que usen la imagen que usaran ese puerto para escuchar las peticiones. </p> <p>Hay que tener en cuenta que esto no abre un puerto en el contenedor, hay que hacerlo explicitamente mapeandolo en el comando <code>docker run</code></p> </li> <li> <p><code>CMD</code>: Esta directiva indica que comando ser\u00e1 ejecutado en el tiempo de ejecuci\u00f3n del contenedor, es decir, que durante la creaci\u00f3n de la imagen no es ejecutado.</p> </li> </ul> <p>Ahora para crear la imagen de docker, se deber\u00e1 de hacer con el siguiente comando y estando en la carpeta que contiene el fichero Dockerfile.</p> <pre><code>docker build -t librodirecciones .\n</code></pre> <p></p>"},{"location":"DAWEB/Tema%206/practica6-1/#creacion-del-contenedor-de-docker","title":"Creaci\u00f3n del contenedor de docker","text":"<p>Para crear un contenedor de docker usamos el comando <code>docker run</code>, al que le podemos indicar la imagen del contenedor. Los par\u00e1metros que usamos son los siguientes:</p> <ul> <li><code>-p</code>: Este par\u00e1metro permite mapear un puerto de la imagen a un puerto del contenedor, sigue el siguiente formato: <code>&lt;puerto_imagen&gt;:&lt;puerto_contenedor&gt;</code></li> <li><code>--name</code>: nombre del contenedor para que se le pueda hacer referencia mas f\u00e1cilmente mas adelante, por ejemplo para borrarlo.</li> <li><code>-d</code>: indicamos que el contenedor ser\u00e1 ejecutado en segundo plano tras la creaci\u00f3n de este.</li> </ul> <pre><code>docker run -p 3000:3000 --name &lt;nombre&gt; -d librodirecciones\n</code></pre> <p></p> <p>Comprobamos los logs del contenedor para ver si todo sali\u00f3 bien, usamos el comando <code>docker logs</code>.</p> <p></p> <p>Ahora probamos acceder al servidor, usando el puerto que mapeamos en el contenedor y si todo sale bien sale lo de la captura.</p> <p></p>"},{"location":"DAWEB/Tema%206/practica6-1/#integrando-multiples-contenedores","title":"Integrando m\u00faltiples contenedores","text":"<p>Cuando necesitamos usar diferentes contendores de Docker, podemos hacerlo usando <code>docker network</code> que nos permite crear redes virtuales para los contenedores y as\u00ed poder interconectar estos entre s\u00ed. Se puede hacer y es recomendable saber como funciona pero despu\u00e9s para el momento de desplegar contenedores unos dependientes de otros puede ser un quebradero de cabeza por lo que para esto se ha creado la utilidad Docker Compose.</p> <p>Docker Compose se basa en un archivo YAML de configuraci\u00f3n donde definimos los diferentes contenedores con lo que necesitemos para que funcione, la ventaja de esto es que nos permite compartir un archivo con la configuraci\u00f3n de todo y con esto \u00fanicamente poder desplegar las aplicaciones en diferentes entornos diferentes de forma mucho m\u00e1s sencilla que usando \u00fanicamente docker. Adem\u00e1s de poder crear contenedores que dependan de otros de forma mucho m\u00e1s sencilla como es en el caso de esta aplicaci\u00f3n.</p> docker-compose.yml<pre><code>version: \"3.9\"\nservices:\n  postgres:\n    image: postgres:latest\n    environment:\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgres\n    ports: \n      - '5432:5432'\n    volumes:\n      - addressbook-db:/var/lib/postgresql/data\n\n  addressbook:\n    build:\n      context: .\n    environment:\n      DB_SCHEMA: postgres\n      DB_USER: postgres\n      DB_PASSWORD: postgres\n      DB_HOST: postgres\n    depends_on:\n      - postgres\n    ports:\n      - '3000:3000'\n\nvolumes:\n  addressbook-db:\n</code></pre> <p>Si solo queremos desplegarlo, solo nos importa que tengamos el archivo y a partir de ahi usar la utilidad <code>compose</code> que viene incorporada en Docker desde hace unos a\u00f1os atr\u00e1s (en versiones anteriores ten\u00eda que descargarse a parte, cosa que viene explicada en la documentaci\u00f3n de Docker oficial).</p> <p>Info</p> <p>Los comando de compose se recomienda ejecutarse dentro de la carpeta que contenga el fichero <code>docker-compose.yml</code> ya que ese nombre es el por  defecto que docker compose buscar\u00e1 al momento de realizar alguno. </p> <p>En caso de tener varios ficheros .yml, podemos indicar a compose por medio del par\u00e1metro <code>-f</code> cual queremos usar, por ejemplo: <code>docker compose -f docker-compose.ci.yml up</code>.</p> <p>Los comandos m\u00e1s usados son los siguientes:</p> <ul> <li><code>docker compose up</code>: Permite levantar uno o todos los servicios del fichero docker-compose.yml.</li> <li><code>docker compose down</code>: Permite eliminar uno o todos los servicios del fichero docker-compose.yml.</li> <li><code>docker compose start</code>: Permite iniciar uno o todos los servicios del fichero docker-compose.yml.</li> <li><code>docker compose stop</code>: Permite parar uno o todos los servicios del fichero docker-compose.yml.</li> <li><code>docker compose run</code>: Permite ejecutar un comando dentro de un servicio espec\u00edfico del fichero docker-compose.yml</li> </ul> <p>Tip</p> <p>Para saber m\u00e1s a fondo puedes acceder a la documentaci\u00f3n de docker compose.</p>"},{"location":"DAWEB/Tema%206/practica6-1/#crear-tablas-de-la-base-de-datos","title":"Crear tablas de la base de datos","text":"<p>Para que la aplicaci\u00f3n que desplegamos con docker funcione, este depende de una base de datos para funcionar. Para ello la propia aplicaci\u00f3n  nos propociona un script para poder crear las tablas, para ello simplemente usamos el siguiente comando:</p> <pre><code>docker compose run addressbook npm run migrate\n</code></pre> <p>Esto conectar\u00e1 con el contenedor PostgreSQL del <code>docker-compose.yml</code> y si est\u00e1 levantado crear\u00e1 las tablas</p> <p></p>"},{"location":"DAWEB/Tema%206/practica6-1/#ejecutar-tests-de-la-aplicacion","title":"Ejecutar tests de la aplicaci\u00f3n","text":"<p>Una vez tenemos lo anterior funcionando, ya solo nos queda probar que todo funciona. Podemos desplegar la aplicaci\u00f3n y probarla pero tambi\u00e9n podemos usar la bater\u00eda de tests que esta propociona para ver que todo funciona correctamente, para ello usamos el siguiente comando: <pre><code>docker compose run addressbook npm test\n</code></pre> </p> <p>Warning</p> <p>Para esto debemos de tener funcionando la base de datos, lo har\u00e1 de forma autom\u00e1tica ya que tenemos definido que el servicio <code>addressbook</code> dependa del contendor de PostgreSQL. Quiero aclararlo por si ocurre que por alguna raz\u00f3n u otra no funcionan los tests</p>"},{"location":"DAWEB/Tema%206/practica6-1/#poner-en-marcha-la-app","title":"Poner en marcha la app","text":"<p>Una vez hecho los pasos anteriores, desplegamos la aplicaci\u00f3n completamente con el siguiente comando:  <pre><code>docker compose up --build -d\n</code></pre></p> <p>Si nos fijamos, tenemos dos par\u00e1metros en el comando, esto hace que:</p> <ul> <li><code>--build</code>: Obliga a docker compose a reconstruir (en caso de que est\u00e9 creada la imagen con anterioridad, si no existe la construir\u00e1 sin este par\u00e1metro) los servicios que crea contenedores a partir de un Dockerfile, como es el caso de <code>addressbook</code>.</li> <li><code>-d</code>: Indica a docker compose que estos contendores al terminar de crearse, se ejectuar\u00e1n en segundo plano, por lo que no mostrar\u00e1 los logs de estos, nos dejar\u00e1 en la terminal para que hagamos lo que necesitemos.</li> </ul> <p></p>"},{"location":"DAWEB/Tema%206/practica6-1/#probando-la-aplicacion","title":"Probando la aplicaci\u00f3n","text":"<p>Probad que la aplicaci\u00f3n junto con la BBDD funciona correctamente. El funcionamiento de la API es:</p> <ul> <li>PUT /persons/ a\u00f1ade una persona al libro de direcciones: </li> <li>GET /persons/all muestra todas las personas en el libro de direcciones </li> <li>GET /persons/1 muestra la persona con el id 1 </li> <li>DELETE /persons/1 elimina a la persona con el id 1 </li> </ul>"},{"location":"DAWEB/Tema%206/practica6-2/","title":"Pr\u00e1ctica 6.2: Despliegue de una aplicaci\u00f3n PHP con Nginx y MySQL usando Docker y docker-compose","text":""},{"location":"DAWEB/Tema%206/practica6-3/","title":"Pr\u00e1ctica 6.3: Despliegue de servidores web con usuarios autenticados mediante LDAP usando Docker y docker-compose","text":""},{"location":"DAWEB/Tema%206/practica6-3/#despliegue-con-docker-compose","title":"Despliegue con Docker Compose","text":""},{"location":"DAWEB/Tema%206/practica6-3/#preparar-ficheros-para-los-contenedores","title":"Preparar ficheros para los contenedores","text":""},{"location":"DAWEB/Tema%206/practica6-3/#creacion-de-los-contenedores","title":"Creaci\u00f3n de los contenedores","text":""},{"location":"DAWEB/Tema%206/practica6-3/#acceso-a-la-web","title":"Acceso a la web","text":""},{"location":"DAWEB/Tema%206/practica6-3/#despliegue-con-docker","title":"Despliegue con Docker","text":""},{"location":"DAWEB/Tema%206/practica6-3/#preparar-ficheros-para-los-contenedores_1","title":"Preparar ficheros para los contenedores","text":""},{"location":"DAWEB/Tema%206/practica6-3/#creacion-de-la-imagen","title":"Creaci\u00f3n de la imagen","text":""},{"location":"DAWEB/Tema%206/practica6-3/#creacion-del-contenedor","title":"Creaci\u00f3n del contenedor","text":""},{"location":"DAWEB/Tema%206/practica6-3/#prueba-de-funcionamiento","title":"Prueba de funcionamiento","text":""}]}